{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  baseURL: 'http://localhost:8080',\n  timeout: 10000,\n  params: {} // do not remove this, its added to add params later in the config\n\n});\n\nconst setupAxiosInterceptors = () => {\n  instance.interceptors.request.use(function (config) {\n    alert('test');\n    let usrname = 'in28minutes';\n    let pwd = 'dummy';\n    let basicAuthHeader = 'Basic ' + window.btoa(usrname + \":\" + pwd);\n    config.headers.authorization = basicAuthHeader;\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n};\n\nexport default instance;","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/components/instance.js"],"names":["axios","instance","create","baseURL","timeout","params","setupAxiosInterceptors","interceptors","request","use","config","alert","usrname","pwd","basicAuthHeader","window","btoa","headers","authorization","error","Promise","reject"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,uBADiB;AAE1BC,EAAAA,OAAO,EAAE,KAFiB;AAG1BC,EAAAA,MAAM,EAAE,EAHkB,CAGf;;AAHe,CAAb,CAAjB;;AAOA,MAAMC,sBAAsB,GAAE,MAAK;AAEnCL,EAAAA,QAAQ,CAACM,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUC,MAAV,EAAkB;AAChDC,IAAAA,KAAK,CAAC,MAAD,CAAL;AAEA,QAAIC,OAAO,GAAG,aAAd;AACA,QAAIC,GAAG,GAAG,OAAV;AAEA,QAAIC,eAAe,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYJ,OAAO,GAAE,GAAT,GAAeC,GAA3B,CAAjC;AAEAH,IAAAA,MAAM,CAACO,OAAP,CAAeC,aAAf,GAA+BJ,eAA/B;AAEC,WAAOJ,MAAP;AAEH,GAZF,EAYI,UAAUS,KAAV,EAAiB;AAChB;AACA,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,GAfF;AAiBC,CAnBD;;AAqBA,eAAelB,QAAf","sourcesContent":["\r\nimport axios from \"axios\"\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:8080',\r\n    timeout: 10000,\r\n    params: {} // do not remove this, its added to add params later in the config\r\n});\r\n\r\n\r\nconst setupAxiosInterceptors= () =>{\r\n\r\ninstance.interceptors.request.use(function (config) {\r\n    alert('test');\r\n\r\n    let usrname = 'in28minutes'\r\n    let pwd = 'dummy'\r\n    \r\n    let basicAuthHeader = 'Basic ' + window.btoa(usrname+ \":\" + pwd);\r\n\r\n    config.headers.authorization = basicAuthHeader\r\n\r\n     return config;\r\n\r\n }, function (error) {\r\n     // Do something with request error\r\n     return Promise.reject(error)\r\n })\r\n\r\n}\r\n\r\nexport default instance"]},"metadata":{},"sourceType":"module"}