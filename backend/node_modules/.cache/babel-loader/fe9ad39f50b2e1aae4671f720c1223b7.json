{"ast":null,"code":"import axios from \"axios\";\n\nclass AuthenticationService {// executeBasicAuthenticationService(phonenumber, password) {\n  //     return axios.get(\"http://localhost:8080/basicauth\",\n  //         { headers: { authorization: this.createBasicAuthToken(phonenumber, password) } })\n  // }\n  // executeJwtAuthenticationService(phonenumber, password) {\n  //     return axios.post(\"http://localhost:8080/authenticate\", {\n  //         phonenumber,\n  //         password\n  //     })\n  // }\n  // createBasicAuthToken(phonenumber, password) {\n  //     return 'Basic ' + window.btoa(phonenumber + \":\" + password)\n  // }\n  // createJwtToken(token) {\n  //     return 'Bearer ' + window.btoa(phonenumber + \":\" + password)\n  // }\n  // registerSuccessfulLoginForJwt(phonenumber){\n  //     sessionStorage.setItem('authenticatedUser',phonenumber);\n  // }\n  // registerSuccessfulLogin(phonenumber){\n  //     sessionStorage.setItem('authenticatedUser',phonenumber);\n  // }\n  // logout(){\n  //     sessionStorage.removeItem('authenticatedUser');\n  // }\n  // isUserLoggedIn(){\n  //     let user = sessionStorage.getItem('authenticatedUser')\n  //     if(user === null) return false\n  //     return true\n  // }\n  // getLoggedInUserName(){\n  //     let user = sessionStorage.getItem(\"authenticatedUser\");\n  //     if(user===null) \n  //         return '';\n  //      return user;\n  // }\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/components/AuthenticationService.js"],"names":["axios","AuthenticationService"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAN,CAA2B,CAEvB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AArDuB;;AAyD3B,eAAe,IAAIA,qBAAJ,EAAf","sourcesContent":["\r\nimport axios from \"axios\"\r\n\r\nclass AuthenticationService{\r\n\r\n    // executeBasicAuthenticationService(phonenumber, password) {\r\n    //     return axios.get(\"http://localhost:8080/basicauth\",\r\n    //         { headers: { authorization: this.createBasicAuthToken(phonenumber, password) } })\r\n    // }\r\n\r\n    // executeJwtAuthenticationService(phonenumber, password) {\r\n    //     return axios.post(\"http://localhost:8080/authenticate\", {\r\n    //         phonenumber,\r\n    //         password\r\n    //     })\r\n    // }\r\n\r\n    // createBasicAuthToken(phonenumber, password) {\r\n    //     return 'Basic ' + window.btoa(phonenumber + \":\" + password)\r\n    // }\r\n\r\n    // createJwtToken(token) {\r\n    //     return 'Bearer ' + window.btoa(phonenumber + \":\" + password)\r\n    // }\r\n\r\n    // registerSuccessfulLoginForJwt(phonenumber){\r\n    //     sessionStorage.setItem('authenticatedUser',phonenumber);\r\n    // }\r\n\r\n    // registerSuccessfulLogin(phonenumber){\r\n\r\n    //     sessionStorage.setItem('authenticatedUser',phonenumber);\r\n\r\n    // }\r\n\r\n    // logout(){\r\n    //     sessionStorage.removeItem('authenticatedUser');\r\n    // }\r\n\r\n    // isUserLoggedIn(){\r\n    //     let user = sessionStorage.getItem('authenticatedUser')\r\n        \r\n    //     if(user === null) return false\r\n\r\n    //     return true\r\n\r\n    // }\r\n\r\n    // getLoggedInUserName(){\r\n\r\n    //     let user = sessionStorage.getItem(\"authenticatedUser\");\r\n    //     if(user===null) \r\n    //         return '';\r\n\r\n    //      return user;\r\n\r\n    // }\r\n\r\n}\r\n\r\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}