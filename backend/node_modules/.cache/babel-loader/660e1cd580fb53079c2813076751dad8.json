{"ast":null,"code":"import axios from \"axios\";\n\nclass instance {}\n\ninstance.instance = axios.create({\n  baseURL: 'http://localhost:8080',\n  timeout: 10000,\n  params: {} // do not remove this, its added to add params later in the config\n\n});\n\nconst getInstance = (x, y) => {\n  let usrname = x;\n  let pwd = y;\n  const instance = axios.create({\n    baseURL: 'http://localhost:8080',\n    timeout: 10000,\n    params: {} // do not remove this, its added to add params later in the config\n\n  });\n\n  if (x != null) {\n    instance.interceptors.request.use(function (config) {\n      alert('test');\n      let basicAuthHeader = 'Basic ' + window.btoa(usrname + \":\" + pwd);\n      config.headers.authorization = basicAuthHeader;\n      return config;\n    }, function (error) {\n      // Do something with request error\n      return Promise.reject(error);\n    });\n  }\n\n  return instance;\n};\n\nexport default getInstance;","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/components/instance.js"],"names":["axios","instance","create","baseURL","timeout","params","getInstance","x","y","usrname","pwd","interceptors","request","use","config","alert","basicAuthHeader","window","btoa","headers","authorization","error","Promise","reject"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,CAAc;;AAARA,Q,CAEKA,Q,GAAWD,KAAK,CAACE,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAE,uBADkB;AAE3BC,EAAAA,OAAO,EAAE,KAFkB;AAG3BC,EAAAA,MAAM,EAAE,EAHmB,CAGhB;;AAHgB,CAAb,C;;AAUtB,MAAMC,WAAW,GAAG,CAACC,CAAD,EAAGC,CAAH,KAAQ;AAE5B,MAAIC,OAAO,GAAGF,CAAd;AACA,MAAIG,GAAG,GAAGF,CAAV;AAEA,QAAMP,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAE,uBADiB;AAE1BC,IAAAA,OAAO,EAAE,KAFiB;AAG1BC,IAAAA,MAAM,EAAE,EAHkB,CAGf;;AAHe,GAAb,CAAjB;;AAMA,MAAGE,CAAC,IAAE,IAAN,EAAW;AACXN,IAAAA,QAAQ,CAACU,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUC,MAAV,EAAkB;AAChDC,MAAAA,KAAK,CAAC,MAAD,CAAL;AAEA,UAAIC,eAAe,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYT,OAAO,GAAE,GAAT,GAAeC,GAA3B,CAAjC;AAEAI,MAAAA,MAAM,CAACK,OAAP,CAAeC,aAAf,GAA+BJ,eAA/B;AAEC,aAAOF,MAAP;AAEH,KATF,EASI,UAAUO,KAAV,EAAiB;AAChB;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,KAZF;AAaC;;AAEA,SAAOpB,QAAP;AAEA,CA7BD;;AA+BA,eAAeK,WAAf","sourcesContent":["\r\nimport axios from \"axios\"\r\n\r\nclass instance{\r\n\r\n    static instance = axios.create({\r\n        baseURL: 'http://localhost:8080',\r\n        timeout: 10000,\r\n        params: {} // do not remove this, its added to add params later in the config\r\n    });\r\n\r\n\r\n\r\n}\r\n\r\nconst getInstance = (x,y) =>{\r\n\r\nlet usrname = x;\r\nlet pwd = y;\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:8080',\r\n    timeout: 10000,\r\n    params: {} // do not remove this, its added to add params later in the config\r\n});\r\n\r\nif(x!=null){\r\ninstance.interceptors.request.use(function (config) {\r\n    alert('test');\r\n\r\n    let basicAuthHeader = 'Basic ' + window.btoa(usrname+ \":\" + pwd);\r\n\r\n    config.headers.authorization = basicAuthHeader\r\n\r\n     return config;\r\n\r\n }, function (error) {\r\n     // Do something with request error\r\n     return Promise.reject(error)\r\n })\r\n}\r\n\r\n return instance;\r\n\r\n}\r\n\r\nexport default getInstance;\r\n"]},"metadata":{},"sourceType":"module"}