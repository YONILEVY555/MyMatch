{"ast":null,"code":"import axios from \"axios\";\n\nconst getAxios = (x, y) => {\n  let usrname = x;\n  let pwd = y;\n  const instance = axios.create({\n    baseURL: 'http://localhost:8080',\n    timeout: 10000,\n    params: {} // do not remove this, its added to add params later in the config\n\n  });\n  instance.interceptors.request.use(function (config) {\n    let basicAuthHeader = 'Basic ' + \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJpbjI4bWludXRlcyIsImV4cCI6MTYzODQ1MTk3NSwiaWF0IjoxNjM3ODQ3MTc1fQ.qU_Yf-zqlcCkkgxR8Bsvx1OMpQmGTlxablg_4DZqsOUQJmvE5X2V0xfF-OUtoeU66I8bgZqt2Hdq_FGVsEIEnw\";\n    config.headers.authorization = basicAuthHeader;\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n  return instance;\n};\n\nexport default getAxios;","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/components/AxiosService.js"],"names":["axios","getAxios","x","y","usrname","pwd","instance","create","baseURL","timeout","params","interceptors","request","use","config","basicAuthHeader","headers","authorization","error","Promise","reject"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,CAAD,EAAGC,CAAH,KAAQ;AAEzB,MAAIC,OAAO,GAAGF,CAAd;AACA,MAAIG,GAAG,GAAGF,CAAV;AAEA,QAAMG,QAAQ,GAAGN,KAAK,CAACO,MAAN,CAAa;AAE1BC,IAAAA,OAAO,EAAE,uBAFiB;AAG1BC,IAAAA,OAAO,EAAE,KAHiB;AAI1BC,IAAAA,MAAM,EAAE,EAJkB,CAIf;;AAJe,GAAb,CAAjB;AAQAJ,EAAAA,QAAQ,CAACK,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUC,MAAV,EAAkB;AAEhD,QAAIC,eAAe,GAAG,WAAW,wLAAjC;AAEAD,IAAAA,MAAM,CAACE,OAAP,CAAeC,aAAf,GAA+BF,eAA/B;AAEC,WAAOD,MAAP;AAEH,GARF,EAQI,UAAUI,KAAV,EAAiB;AAChB;AACA,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,GAXF;AAaC,SAAOZ,QAAP;AAEA,CA5BD;;AA8BA,eAAeL,QAAf","sourcesContent":["\r\nimport axios from \"axios\"\r\n\r\nconst getAxios = (x,y) =>{\r\n\r\nlet usrname = x;\r\nlet pwd = y;\r\n\r\nconst instance = axios.create({\r\n    \r\n    baseURL: 'http://localhost:8080',\r\n    timeout: 10000,\r\n    params: {} // do not remove this, its added to add params later in the config\r\n    \r\n});\r\n\r\ninstance.interceptors.request.use(function (config) {\r\n\r\n    let basicAuthHeader = 'Basic ' + \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJpbjI4bWludXRlcyIsImV4cCI6MTYzODQ1MTk3NSwiaWF0IjoxNjM3ODQ3MTc1fQ.qU_Yf-zqlcCkkgxR8Bsvx1OMpQmGTlxablg_4DZqsOUQJmvE5X2V0xfF-OUtoeU66I8bgZqt2Hdq_FGVsEIEnw\"\r\n\r\n    config.headers.authorization = basicAuthHeader\r\n\r\n     return config;\r\n\r\n }, function (error) {\r\n     // Do something with request error\r\n     return Promise.reject(error)\r\n })\r\n\r\n return instance;\r\n\r\n}\r\n\r\nexport default getAxios;\r\n\r\n"]},"metadata":{},"sourceType":"module"}