{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yonil\\\\my-app\\\\src\\\\pages\\\\show_friends\\\\ShowFriends.jsx\";\nimport React, { Component } from \"react\";\nimport UserDataService from \"@api/user/UserDataService\";\nimport AuthenticationService from \"@services/AuthenticationService.js\";\nimport GridSystem from '@components/GridSystem.js';\nimport { Image, Button } from \"react-bootstrap\";\nimport SubNavbar from \"./component/SubNavbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShowFriends extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refresh = async () => {\n      const res = await UserDataService.getFriends(this.state.id);\n      this.setState({\n        ListFriends: res.data\n      });\n    };\n\n    this.cancelFriendshipClick = async friendId => {\n      var requestParam = {\n        params: {\n          userId: Number(this.state.id),\n          friendId: Number(friendId)\n        }\n      };\n      await UserDataService.deleteRelationship(this.state.id, requestParam);\n      this.refresh();\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.getNumRow = colCount => {\n      let rowcount;\n\n      if (this.state.ListFriends != null) {\n        rowcount = Math.ceil(this.state.ListFriends.length / colCount);\n      } else {\n        rowcount = 0;\n      }\n\n      return rowcount;\n    };\n\n    this.buildListViewFriends = () => {\n      const ListViewFriends = [];\n      let view;\n\n      for (let i = 0; this.state.ListFriends != null && i < this.state.ListFriends.length; i++) {\n        const view = this.buildViewFriend(this.state.ListFriends[i].username, this.state.ListFriends[i].id, this.state.ListFriends[i].image[0].content, this.cancelFriendshipClick);\n        ListViewFriends.push(view);\n      }\n\n      return ListViewFriends;\n    };\n\n    this.buildViewFriend = (username, id, image, cancelFriendshipClick) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => cancelFriendshipClick(e.target.id),\n          id: id,\n          className: \"c1 mt-4\",\n          children: \"cancel friendship\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"c3 d-inline-block\",\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          src: `data:image/jpeg;base64,${image}`,\n          className: \"grid-image mt-3 c2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this);\n    };\n\n    this.state = {\n      id: AuthenticationService.getLoggedInUserId(),\n      ListFriends: null,\n      Serach: ''\n    };\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  render() {\n    const colCount = 2;\n    const rowcount = this.getNumRow(colCount);\n    const ListViewFriends = this.buildListViewFriends();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(SubNavbar, {\n        handleChange: this.handleChange,\n        valSerach: this.state.valSerach\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(GridSystem, {\n        rowcount: rowcount,\n        colCount: colCount,\n        view: ListViewFriends\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ShowFriends;","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/pages/show_friends/ShowFriends.jsx"],"names":["React","Component","UserDataService","AuthenticationService","GridSystem","Image","Button","SubNavbar","ShowFriends","constructor","props","refresh","res","getFriends","state","id","setState","ListFriends","data","cancelFriendshipClick","friendId","requestParam","params","userId","Number","deleteRelationship","handleChange","event","target","name","value","getNumRow","colCount","rowcount","Math","ceil","length","buildListViewFriends","ListViewFriends","view","i","buildViewFriend","username","image","content","push","e","getLoggedInUserId","Serach","componentDidMount","render","valSerach"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport UserDataService from \"@api/user/UserDataService\";\r\nimport AuthenticationService from \"@services/AuthenticationService.js\"\r\nimport GridSystem from '@components/GridSystem.js';\r\nimport {Image, Button } from \"react-bootstrap\"\r\nimport SubNavbar from \"./component/SubNavbar\";\r\n\r\nclass ShowFriends extends Component {\r\n  \r\n  constructor(props){\r\n    super(props)\r\n        this.state = {\r\n            id: AuthenticationService.getLoggedInUserId(),\r\n            ListFriends: null,\r\n            Serach: ''\r\n        }\r\n    }\r\n\r\n  componentDidMount(){\r\n    this.refresh()\r\n  }\r\n\r\n  refresh = async () =>{\r\n    const res =  await UserDataService.getFriends(this.state.id);\r\n    this.setState({ListFriends : res.data})\r\n  }\r\n\r\n  cancelFriendshipClick = async (friendId) =>{\r\n\r\n    var requestParam = {\r\n        params: {\r\n          userId: Number(this.state.id) ,\r\n          friendId: Number(friendId), \r\n      }\r\n    }\r\n\r\n    await UserDataService.deleteRelationship(this.state.id,requestParam);\r\n\r\n    this.refresh()\r\n\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name] : event.target.value\r\n    })\r\n\r\n    \r\n  }\r\n  \r\n  getNumRow = (colCount) =>{\r\n\r\n    let rowcount\r\n\r\n    if(this.state.ListFriends!=null){\r\n      rowcount = Math.ceil(this.state.ListFriends.length / colCount) ;\r\n     }else{\r\n       rowcount = 0;\r\n     }\r\n\r\n     return rowcount\r\n  }\r\n\r\n  buildListViewFriends = () =>{\r\n\r\n    const ListViewFriends = [];\r\n    let view\r\n\r\n    for(let i = 0; this.state.ListFriends != null && i<this.state.ListFriends.length;i++){\r\n\r\n       const view = this.buildViewFriend(this.state.ListFriends[i].username,\r\n                                this.state.ListFriends[i].id,\r\n                                this.state.ListFriends[i].image[0].content,\r\n                                this.cancelFriendshipClick)\r\n\r\n        ListViewFriends.push( view )\r\n        }\r\n\r\n      return ListViewFriends\r\n    }\r\n\r\n    buildViewFriend = (username,id,image,cancelFriendshipClick) => {\r\n\r\n      return  <div className='wrapper'>\r\n                <Button onClick={e => cancelFriendshipClick(e.target.id)}  id={id} className='c1 mt-4'>cancel friendship</Button>\r\n                <div className='c3 d-inline-block'>{username}</div> \r\n                <Image src={`data:image/jpeg;base64,${image}`} className=\"grid-image mt-3 c2\"  />\r\n              </div> \r\n    }\r\n  \r\n  render() {\r\n\r\n    const colCount = 2\r\n    const rowcount = this.getNumRow(colCount)\r\n    const ListViewFriends = this.buildListViewFriends()\r\n\r\n    return (\r\n\r\n      <div className=\"mx-auto\">\r\n\r\n              <SubNavbar handleChange={this.handleChange} valSerach={this.state.valSerach}/>\r\n\r\n               <GridSystem rowcount = {rowcount} \r\n                           colCount = {colCount} \r\n                           view={ListViewFriends}\r\n               />\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowFriends\r\n"]},"metadata":{},"sourceType":"module"}