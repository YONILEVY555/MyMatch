{"ast":null,"code":"import axios from \"axios\";\n\nclass AuthenticationService {\n  executeBasicAuthenticationService(phonenumber, password) {\n    return axios.get(`${API_URL}/basicauth`, {\n      headers: {\n        authorization: this.createBasicAuthToken(phonenumber, password)\n      }\n    });\n  }\n\n  executeJwtAuthenticationService(phonenumber, password) {\n    return axios.post(`${API_URL}/authenticate`, {\n      phonenumber,\n      password\n    });\n  }\n\n  createBasicAuthToken(phonenumber, password) {\n    return 'Basic ' + window.btoa(phonenumber + \":\" + password);\n  }\n\n  registerSuccessfulLogin(phonenumber, password) {\n    sessionStorage.setItem('authenticatedUser', phonenumber);\n  }\n\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return false;\n    return true;\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(\"authenticatedUser\");\n    if (user === null) return '';\n    return user;\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/components/AuthenticationService.js"],"names":["axios","AuthenticationService","executeBasicAuthenticationService","phonenumber","password","get","API_URL","headers","authorization","createBasicAuthToken","executeJwtAuthenticationService","post","window","btoa","registerSuccessfulLogin","sessionStorage","setItem","logout","removeItem","isUserLoggedIn","user","getItem","getLoggedInUserName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAN,CAA2B;AAEvBC,EAAAA,iCAAiC,CAACC,WAAD,EAAcC,QAAd,EAAwB;AACrD,WAAOJ,KAAK,CAACK,GAAN,CAAW,GAAEC,OAAQ,YAArB,EACH;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,KAAKC,oBAAL,CAA0BN,WAA1B,EAAuCC,QAAvC;AAAjB;AAAX,KADG,CAAP;AAEH;;AAEDM,EAAAA,+BAA+B,CAACP,WAAD,EAAcC,QAAd,EAAwB;AACnD,WAAOJ,KAAK,CAACW,IAAN,CAAY,GAAEL,OAAQ,eAAtB,EAAsC;AACzCH,MAAAA,WADyC;AAEzCC,MAAAA;AAFyC,KAAtC,CAAP;AAIH;;AAEDK,EAAAA,oBAAoB,CAACN,WAAD,EAAcC,QAAd,EAAwB;AACxC,WAAO,WAAWQ,MAAM,CAACC,IAAP,CAAYV,WAAW,GAAG,GAAd,GAAoBC,QAAhC,CAAlB;AACH;;AAEDU,EAAAA,uBAAuB,CAACX,WAAD,EAAaC,QAAb,EAAsB;AAEzCW,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA2Cb,WAA3C;AAEH;;AAEDc,EAAAA,MAAM,GAAE;AACJF,IAAAA,cAAc,CAACG,UAAf,CAA0B,mBAA1B;AACH;;AAEDC,EAAAA,cAAc,GAAE;AACZ,QAAIC,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX;AAEA,QAAGD,IAAI,KAAK,IAAZ,EAAkB,OAAO,KAAP;AAElB,WAAO,IAAP;AAEH;;AAEDE,EAAAA,mBAAmB,GAAE;AAEjB,QAAIF,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX;AACA,QAAGD,IAAI,KAAG,IAAV,EACI,OAAO,EAAP;AAEH,WAAOA,IAAP;AAEJ;;AA7CsB;;AAiD3B,eAAe,IAAInB,qBAAJ,EAAf","sourcesContent":["import axios from \"axios\"\r\n\r\nclass AuthenticationService{\r\n\r\n    executeBasicAuthenticationService(phonenumber, password) {\r\n        return axios.get(`${API_URL}/basicauth`,\r\n            { headers: { authorization: this.createBasicAuthToken(phonenumber, password) } })\r\n    }\r\n\r\n    executeJwtAuthenticationService(phonenumber, password) {\r\n        return axios.post(`${API_URL}/authenticate`, {\r\n            phonenumber,\r\n            password\r\n        })\r\n    }\r\n\r\n    createBasicAuthToken(phonenumber, password) {\r\n        return 'Basic ' + window.btoa(phonenumber + \":\" + password)\r\n    }\r\n\r\n    registerSuccessfulLogin(phonenumber,password){\r\n\r\n        sessionStorage.setItem('authenticatedUser',phonenumber);\r\n\r\n    }\r\n\r\n    logout(){\r\n        sessionStorage.removeItem('authenticatedUser');\r\n    }\r\n\r\n    isUserLoggedIn(){\r\n        let user = sessionStorage.getItem('authenticatedUser')\r\n        \r\n        if(user === null) return false\r\n\r\n        return true\r\n\r\n    }\r\n\r\n    getLoggedInUserName(){\r\n\r\n        let user = sessionStorage.getItem(\"authenticatedUser\");\r\n        if(user===null) \r\n            return '';\r\n\r\n         return user;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}