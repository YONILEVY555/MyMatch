{"ast":null,"code":"import axios from \"axios\";\nlet usrname = 'in28minutes';\nlet pwd = 'dummy';\nexport const getVerificationInformation = (x, y) => {\n  usrname = x;\n  pwd = y;\n};\nconst instance = axios.create({\n  baseURL: 'http://localhost:8080',\n  timeout: 10000,\n  params: {} // do not remove this, its added to add params later in the config\n\n});\ninstance.interceptors.request.use(function (config) {\n  alert('test');\n  let basicAuthHeader = 'Basic ' + window.btoa(usrname + \":\" + pwd);\n  config.headers.authorization = basicAuthHeader;\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/components/instance.js"],"names":["axios","usrname","pwd","getVerificationInformation","x","y","instance","create","baseURL","timeout","params","interceptors","request","use","config","alert","basicAuthHeader","window","btoa","headers","authorization","error","Promise","reject"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,OAAO,GAAG,aAAd;AACA,IAAIC,GAAG,GAAG,OAAV;AAGA,OAAO,MAAMC,0BAA0B,GAAG,CAACC,CAAD,EAAGC,CAAH,KAAQ;AAC9CJ,EAAAA,OAAO,GAAGG,CAAV;AACAF,EAAAA,GAAG,GAAGG,CAAN;AACH,CAHM;AAKP,MAAMC,QAAQ,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,uBADiB;AAE1BC,EAAAA,OAAO,EAAE,KAFiB;AAG1BC,EAAAA,MAAM,EAAE,EAHkB,CAGf;;AAHe,CAAb,CAAjB;AAOAJ,QAAQ,CAACK,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUC,MAAV,EAAkB;AAChDC,EAAAA,KAAK,CAAC,MAAD,CAAL;AAEA,MAAIC,eAAe,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYjB,OAAO,GAAE,GAAT,GAAeC,GAA3B,CAAjC;AAEAY,EAAAA,MAAM,CAACK,OAAP,CAAeC,aAAf,GAA+BJ,eAA/B;AAEC,SAAOF,MAAP;AAEH,CATF,EASI,UAAUO,KAAV,EAAiB;AAChB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAZF;AAgBA,eAAef,QAAf","sourcesContent":["\r\nimport axios from \"axios\"\r\n\r\nlet usrname = 'in28minutes'\r\nlet pwd = 'dummy'\r\n\r\n\r\nexport const getVerificationInformation = (x,y) =>{\r\n    usrname = x;\r\n    pwd = y;\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:8080',\r\n    timeout: 10000,\r\n    params: {} // do not remove this, its added to add params later in the config\r\n});\r\n\r\n\r\ninstance.interceptors.request.use(function (config) {\r\n    alert('test');\r\n\r\n    let basicAuthHeader = 'Basic ' + window.btoa(usrname+ \":\" + pwd);\r\n\r\n    config.headers.authorization = basicAuthHeader\r\n\r\n     return config;\r\n\r\n }, function (error) {\r\n     // Do something with request error\r\n     return Promise.reject(error)\r\n })\r\n\r\n\r\n\r\nexport default instance;\r\n"]},"metadata":{},"sourceType":"module"}