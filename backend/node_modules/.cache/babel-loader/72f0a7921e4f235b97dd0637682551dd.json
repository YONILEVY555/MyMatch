{"ast":null,"code":"import axios from \"axios\";\n\nclass Instance {\n  constructor(usrname, pwd) {\n    this.instance = axios.create({\n      baseURL: 'http://localhost:8080',\n      timeout: 10000,\n      params: {} // do not remove this, its added to add params later in the config\n\n    });\n    instance.interceptors.request.use(function (config) {\n      alert('test');\n      let basicAuthHeader = 'Basic ' + window.btoa(usrname + \":\" + pwd);\n      config.headers.authorization = basicAuthHeader;\n      return config;\n    }, function (error) {\n      // Do something with request error\n      return Promise.reject(error);\n    });\n  }\n\n} // const getInstance = (x,y) =>{\n// let usrname = x;\n// let pwd = y;\n// const instance = axios.create({\n//     baseURL: 'http://localhost:8080',\n//     timeout: 10000,\n//     params: {} // do not remove this, its added to add params later in the config\n// });\n// if(x!=null){\n// instance.interceptors.request.use(function (config) {\n//     alert('test');\n//     let basicAuthHeader = 'Basic ' + window.btoa(usrname+ \":\" + pwd);\n//     config.headers.authorization = basicAuthHeader\n//      return config;\n//  }, function (error) {\n//      // Do something with request error\n//      return Promise.reject(error)\n//  })\n// }\n//  return instance;\n// }\n\n\nexport default instance;","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/components/instance.js"],"names":["axios","Instance","constructor","usrname","pwd","instance","create","baseURL","timeout","params","interceptors","request","use","config","alert","basicAuthHeader","window","btoa","headers","authorization","error","Promise","reject"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,CAAc;AAIVC,EAAAA,WAAW,CAACC,OAAD,EAASC,GAAT,EAAc;AAErB,SAAKC,QAAL,GAAcL,KAAK,CAACM,MAAN,CAAa;AACvBC,MAAAA,OAAO,EAAE,uBADc;AAEvBC,MAAAA,OAAO,EAAE,KAFc;AAGvBC,MAAAA,MAAM,EAAE,EAHe,CAGZ;;AAHY,KAAb,CAAd;AAMAJ,IAAAA,QAAQ,CAACK,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUC,MAAV,EAAkB;AAChDC,MAAAA,KAAK,CAAC,MAAD,CAAL;AAEA,UAAIC,eAAe,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYd,OAAO,GAAE,GAAT,GAAeC,GAA3B,CAAjC;AAEAS,MAAAA,MAAM,CAACK,OAAP,CAAeC,aAAf,GAA+BJ,eAA/B;AAEC,aAAOF,MAAP;AAEH,KATF,EASI,UAAUO,KAAV,EAAiB;AAChB;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,KAZF;AAcH;;AA1BS,C,CA8Bd;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;AAEA,eAAef,QAAf","sourcesContent":["\r\nimport axios from \"axios\"\r\n\r\nclass Instance{\r\n\r\n    static instance;\r\n   \r\n    constructor(usrname,pwd) {\r\n\r\n        this.instance=axios.create({\r\n            baseURL: 'http://localhost:8080',\r\n            timeout: 10000,\r\n            params: {} // do not remove this, its added to add params later in the config\r\n        });\r\n\r\n        instance.interceptors.request.use(function (config) {\r\n            alert('test');\r\n        \r\n            let basicAuthHeader = 'Basic ' + window.btoa(usrname+ \":\" + pwd);\r\n        \r\n            config.headers.authorization = basicAuthHeader\r\n        \r\n             return config;\r\n        \r\n         }, function (error) {\r\n             // Do something with request error\r\n             return Promise.reject(error)\r\n         })\r\n\r\n    }\r\n\r\n}\r\n\r\n// const getInstance = (x,y) =>{\r\n\r\n// let usrname = x;\r\n// let pwd = y;\r\n\r\n// const instance = axios.create({\r\n//     baseURL: 'http://localhost:8080',\r\n//     timeout: 10000,\r\n//     params: {} // do not remove this, its added to add params later in the config\r\n    \r\n// });\r\n\r\n// if(x!=null){\r\n// instance.interceptors.request.use(function (config) {\r\n//     alert('test');\r\n\r\n//     let basicAuthHeader = 'Basic ' + window.btoa(usrname+ \":\" + pwd);\r\n\r\n//     config.headers.authorization = basicAuthHeader\r\n\r\n//      return config;\r\n\r\n//  }, function (error) {\r\n//      // Do something with request error\r\n//      return Promise.reject(error)\r\n//  })\r\n// }\r\n\r\n//  return instance;\r\n\r\n// }\r\n\r\nexport default instance;\r\n"]},"metadata":{},"sourceType":"module"}