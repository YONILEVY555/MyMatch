{"ast":null,"code":"import axios from \"axios\";\n\nclass AuthenticationService {\n  executeBasicAuthenticationService(yoni, password) {\n    return axios.get(\"http://localhost:8080/basicauth\", {\n      headers: {\n        authorization: this.createBasicAuthToken(yoni, password)\n      }\n    });\n  }\n\n  executeJwtAuthenticationService(phonenumber, password) {\n    return axios.post(\"http://localhost:8080/authenticate\", {\n      phonenumber,\n      password\n    });\n  }\n\n  createBasicAuthToken(phonenumber, password) {\n    return 'Basic ' + window.btoa(phonenumber + \":\" + password);\n  }\n\n  createJwtToken(token) {\n    return 'Bearer ' + window.btoa(phonenumber + \":\" + password);\n  }\n\n  registerSuccessfulLoginForJwt(phonenumber) {\n    sessionStorage.setItem('authenticatedUser', phonenumber);\n  }\n\n  registerSuccessfulLogin(phonenumber) {\n    sessionStorage.setItem('authenticatedUser', phonenumber);\n  }\n\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return false;\n    return true;\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(\"authenticatedUser\");\n    if (user === null) return '';\n    return user;\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/components/AuthenticationService.js"],"names":["axios","AuthenticationService","executeBasicAuthenticationService","yoni","password","get","headers","authorization","createBasicAuthToken","executeJwtAuthenticationService","phonenumber","post","window","btoa","createJwtToken","token","registerSuccessfulLoginForJwt","sessionStorage","setItem","registerSuccessfulLogin","logout","removeItem","isUserLoggedIn","user","getItem","getLoggedInUserName"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAN,CAA2B;AAEvBC,EAAAA,iCAAiC,CAACC,IAAD,EAAOC,QAAP,EAAiB;AAC9C,WAAOJ,KAAK,CAACK,GAAN,CAAU,iCAAV,EACH;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,KAAKC,oBAAL,CAA0BL,IAA1B,EAAgCC,QAAhC;AAAjB;AAAX,KADG,CAAP;AAEH;;AAEDK,EAAAA,+BAA+B,CAACC,WAAD,EAAcN,QAAd,EAAwB;AACnD,WAAOJ,KAAK,CAACW,IAAN,CAAW,oCAAX,EAAiD;AACpDD,MAAAA,WADoD;AAEpDN,MAAAA;AAFoD,KAAjD,CAAP;AAIH;;AAEDI,EAAAA,oBAAoB,CAACE,WAAD,EAAcN,QAAd,EAAwB;AACxC,WAAO,WAAWQ,MAAM,CAACC,IAAP,CAAYH,WAAW,GAAG,GAAd,GAAoBN,QAAhC,CAAlB;AACH;;AAEDU,EAAAA,cAAc,CAACC,KAAD,EAAQ;AAClB,WAAO,YAAYH,MAAM,CAACC,IAAP,CAAYH,WAAW,GAAG,GAAd,GAAoBN,QAAhC,CAAnB;AACH;;AAEDY,EAAAA,6BAA6B,CAACN,WAAD,EAAa;AACtCO,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA2CR,WAA3C;AACH;;AAEDS,EAAAA,uBAAuB,CAACT,WAAD,EAAa;AAEhCO,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA2CR,WAA3C;AAEH;;AAEDU,EAAAA,MAAM,GAAE;AACJH,IAAAA,cAAc,CAACI,UAAf,CAA0B,mBAA1B;AACH;;AAEDC,EAAAA,cAAc,GAAE;AACZ,QAAIC,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuB,mBAAvB,CAAX;AAEA,QAAGD,IAAI,KAAK,IAAZ,EAAkB,OAAO,KAAP;AAElB,WAAO,IAAP;AAEH;;AAEDE,EAAAA,mBAAmB,GAAE;AAEjB,QAAIF,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuB,mBAAvB,CAAX;AACA,QAAGD,IAAI,KAAG,IAAV,EACI,OAAO,EAAP;AAEH,WAAOA,IAAP;AAEJ;;AArDsB;;AAyD3B,eAAe,IAAItB,qBAAJ,EAAf","sourcesContent":["\r\nimport axios from \"axios\"\r\n\r\nclass AuthenticationService{\r\n\r\n    executeBasicAuthenticationService(yoni, password) {\r\n        return axios.get(\"http://localhost:8080/basicauth\",\r\n            { headers: { authorization: this.createBasicAuthToken(yoni, password) } })\r\n    }\r\n\r\n    executeJwtAuthenticationService(phonenumber, password) {\r\n        return axios.post(\"http://localhost:8080/authenticate\", {\r\n            phonenumber,\r\n            password\r\n        })\r\n    }\r\n\r\n    createBasicAuthToken(phonenumber, password) {\r\n        return 'Basic ' + window.btoa(phonenumber + \":\" + password)\r\n    }\r\n\r\n    createJwtToken(token) {\r\n        return 'Bearer ' + window.btoa(phonenumber + \":\" + password)\r\n    }\r\n\r\n    registerSuccessfulLoginForJwt(phonenumber){\r\n        sessionStorage.setItem('authenticatedUser',phonenumber);\r\n    }\r\n\r\n    registerSuccessfulLogin(phonenumber){\r\n\r\n        sessionStorage.setItem('authenticatedUser',phonenumber);\r\n\r\n    }\r\n\r\n    logout(){\r\n        sessionStorage.removeItem('authenticatedUser');\r\n    }\r\n\r\n    isUserLoggedIn(){\r\n        let user = sessionStorage.getItem('authenticatedUser')\r\n        \r\n        if(user === null) return false\r\n\r\n        return true\r\n\r\n    }\r\n\r\n    getLoggedInUserName(){\r\n\r\n        let user = sessionStorage.getItem(\"authenticatedUser\");\r\n        if(user===null) \r\n            return '';\r\n\r\n         return user;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}