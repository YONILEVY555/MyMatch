{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yonil\\\\my-app\\\\src\\\\pages\\\\login\\\\components\\\\login_manager\\\\LoginManager.jsx\";\nimport { Component } from \"react\";\nimport AuthenticationService from \"@services/AuthenticationService.js\";\nimport { LoginWithEmail, LoginWithPhone, Title } from './components/index.js';\nimport { Button } from \"react-bootstrap\";\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass LoginManager extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      if (this.isValid(event)) {\n        if (AuthenticationService.executeAuthenticationService(this.state.phonenumber, this.state.password)) {\n          event.preventDefault();\n          AuthenticationService.registerSuccessfulLogin(this.state.email);\n          this.props.history.push('/search/match/');\n        }\n      }\n\n      event.preventDefault();\n    };\n\n    this.isValid = event => {\n      const form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        this.setState({\n          validated: true\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.startLoginWithEmail = () => {\n      this.setState({\n        selectEmail: true\n      });\n    };\n\n    this.startLoginWithPhone = () => {\n      this.setState({\n        selectPhone: true\n      });\n    };\n\n    this.state = {\n      phone: '',\n      email: '',\n      password: '',\n      validated: false,\n      selectEmail: false,\n      selectPhone: false\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), !(this.state.selectEmail || this.state.selectPhone) && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        className: \"mb-2 mt-3 d-block mx-auto mt-5\",\n        onClick: this.startLoginWithPhone,\n        children: \"To register by phone Click here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }, this), !(this.state.selectEmail || this.state.selectPhone) && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        className: \"mb-2 mt-3 d-block mx-auto mt-5\",\n        onClick: this.startLoginWithEmail,\n        children: \"To register by email click here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }, this), this.state.selectEmail && /*#__PURE__*/_jsxDEV(LoginWithEmail, {\n        handleSubmit: this.handleSubmit,\n        handleChange: this.handleChange,\n        validated: this.state.validated,\n        password: this.state.password,\n        loginType: this.state.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 49\n      }, this), this.state.selectPhone && /*#__PURE__*/_jsxDEV(LoginWithPhone, {\n        handleSubmit: this.handleSubmit,\n        handleChange: this.handleChange,\n        validated: this.state.validated,\n        password: this.state.password,\n        loginType: this.state.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = withRouter(LoginManager);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/pages/login/components/login_manager/LoginManager.jsx"],"names":["Component","AuthenticationService","LoginWithEmail","LoginWithPhone","Title","Button","withRouter","LoginManager","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","isValid","executeAuthenticationService","state","phonenumber","password","preventDefault","registerSuccessfulLogin","email","history","push","form","currentTarget","checkValidity","validated","startLoginWithEmail","selectEmail","startLoginWithPhone","selectPhone","phone","render","console","log"],"mappings":"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","sourcesContent":["import {Component} from \"react\"\r\nimport AuthenticationService from \"@services/AuthenticationService.js\"\r\nimport {LoginWithEmail,LoginWithPhone,Title} from './components/index.js'\r\nimport {Button} from \"react-bootstrap\"\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass LoginManager extends Component{\r\n\r\n        constructor(props){\r\n            super(props)\r\n                this.state = {\r\n                    phone: '',\r\n                    email: '',\r\n                    password: '',\r\n                    validated: false,\r\n                    selectEmail: false,\r\n                    selectPhone: false\r\n                }\r\n        }\r\n\r\n        handleChange = (event) => {\r\n            this.setState({\r\n                [event.target.name] : event.target.value\r\n            })\r\n        }\r\n\r\n        handleSubmit = (event) => {\r\n\r\n            if(this.isValid(event)){\r\n                \r\n                if(AuthenticationService.executeAuthenticationService(this.state.phonenumber, this.state.password)){\r\n                    event.preventDefault();\r\n                    AuthenticationService.registerSuccessfulLogin(this.state.email)\r\n                    this.props.history.push('/search/match/')\r\n                   \r\n                }\r\n            }\r\n            \r\n            event.preventDefault();\r\n\r\n        }\r\n\r\n        isValid = (event) =>{\r\n            const form = event.currentTarget;\r\n            if (form.checkValidity() === false) {\r\n                this.setState({validated: true})\r\n                 return false\r\n            }\r\n            \r\n            return true\r\n        }\r\n\r\n        startLoginWithEmail = ()=>{\r\n            this.setState({selectEmail:true})\r\n        }\r\n\r\n        startLoginWithPhone = ()=>{\r\n            this.setState({selectPhone:true})\r\n        }\r\n      \r\n        render(){\r\n\r\n            console.log(this.state)\r\n\r\n            return (\r\n\r\n                <>\r\n\r\n                    <Title/>\r\n\r\n                    { (! (this.state.selectEmail || this.state.selectPhone) ) &&\r\n                      < Button size=\"lg\" className='mb-2 mt-3 d-block mx-auto mt-5' onClick={this.startLoginWithPhone} >\r\n                          To register by phone Click here\r\n                        </Button>\r\n                    }\r\n\r\n                    { (! (this.state.selectEmail || this.state.selectPhone) ) && \r\n                      < Button size=\"lg\" className='mb-2 mt-3 d-block mx-auto mt-5' onClick={this.startLoginWithEmail} >\r\n                          To register by email click here\r\n                      </Button>\r\n                    }\r\n\r\n\r\n                    { this.state.selectEmail && <LoginWithEmail handleSubmit={this.handleSubmit} \r\n                                                                handleChange={this.handleChange}\r\n                                                                validated={this.state.validated}\r\n                                                                password={this.state.password}\r\n                                                                loginType={this.state.email}\r\n                                                />}\r\n\r\n                    { this.state.selectPhone && <LoginWithPhone handleSubmit={this.handleSubmit} \r\n                                                                handleChange={this.handleChange}\r\n                                                                validated={this.state.validated}\r\n                                                                password={this.state.password}\r\n                                                                loginType={this.state.phone}\r\n                    />}\r\n\r\n                </>\r\n\r\n            )\r\n            \r\n        }\r\n\r\n}\r\n\r\nexport default withRouter(LoginManager)"]},"metadata":{},"sourceType":"module"}