{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yonil\\\\my-app\\\\src\\\\pages\\\\search_match\\\\SearchMatch.jsx\";\nimport React, { Component } from 'react';\nimport ViewerNetworkVisualization from \"./components/Viewer_network_visualization/ViewerNetworkVisualization.js\";\nimport ViewerPotenMatch from \"./components/viewer_potenMatch/ViewerPotenMatch.js\";\nimport { UserDataService } from '@api/index.js';\nimport AuthenticationService from '@services/AuthenticationService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchMatch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refresh = async () => {\n      const resOptionMatches = await UserDataService.getOptionMatches(this.state.id);\n      const resPathes = await UserDataService.getPathes(this.state.id, resOptionMatches.data[0].id);\n      const resMyImages = await UserDataService.getImages(this.state.id);\n      const matches = await UserDataService.getMatches(this.state.id);\n      this.setState({\n        optionMatches: resOptionMatches.data,\n        pathes: resPathes.data,\n        myImages: resMyImages.data,\n        relationships: matches.data\n      });\n    };\n\n    this.likeClicked = async () => {\n      let resPathes = null;\n      let newIndexCurrentMatch = 0;\n      this.createOrUpdateMatch();\n\n      if (this.state.indexCurrentMatch < this.state.optionMatches.length - 1) {\n        resPathes = await UserDataService.getPathes(this.state.id, this.state.optionMatches[this.state.indexCurrentMatch + 1].id);\n        newIndexCurrentMatch = this.state.indexCurrentMatch + 1;\n      } else {\n        resPathes = await UserDataService.getPathes(this.state.id, this.state.optionMatches[0].id);\n      }\n\n      this.setState({\n        indexCurrentMatch: newIndexCurrentMatch,\n        pathes: resPathes.data\n      });\n    };\n\n    this.backClicked = () => {\n      if (this.state.indexCurrentMatch == 0) this.setState(prevstate => ({\n        indexCurrentMatch: this.state.optionMatches.length - 1\n      }));else {\n        this.setState(prevstate => ({\n          indexCurrentMatch: prevstate.indexCurrentMatch - 1\n        }));\n      }\n    };\n\n    this.unlikeClicked = async () => {\n      let resPathes = null;\n      let newIndexCurrentMatch = 0;\n\n      if (this.state.indexCurrentMatch < this.state.optionMatches.length - 1) {\n        resPathes = await UserDataService.getPathes(this.state.id, this.state.optionMatches[this.state.indexCurrentMatch + 1].id);\n        newIndexCurrentMatch = this.state.indexCurrentMatch + 1;\n      } else {\n        resPathes = await UserDataService.getPathes(this.state.id, this.state.optionMatches[0].id);\n      }\n\n      this.setState({\n        indexCurrentMatch: newIndexCurrentMatch,\n        pathes: resPathes.data\n      });\n    };\n\n    this.getMorePathes = () => {\n      this.setState(prevstate => ({\n        initialIndexPathSearch: prevstate.initialIndexPathSearch + 4\n      }));\n    };\n\n    this.updateInitialIndexPathSearchToZero = () => {\n      this.setState({\n        initialIndexPathSearch: 0\n      });\n    };\n\n    this.isNewMatch = (matches, optionMatchId) => {\n      for (let i = 0; i < matches.length; i++) {\n        if (matches[i].source == optionMatchId || matches[i].target == optionMatchId) return true;\n      }\n\n      return false;\n    };\n\n    this.iAmTargetOrSource = (matches, optionMatchId) => {\n      for (let i = 0; i < matches.length; i++) {\n        if (matches[i].source == optionMatchId) {\n          return 'T';\n        }\n\n        if (matches[i].target == optionMatchId) {\n          return 'S';\n        }\n      }\n\n      return false;\n    };\n\n    this.createOrUpdateMatch = () => {\n      const isNewMatch = this.isNewMatch(this.state.matches, this.state.optionMatches[this.state.indexCurrentMatch].id);\n      const TargetAndSource = new Map();\n\n      if (isNewMatch) {\n        const iAmTargetOrSource = iAmTargetOrSource(this.state.matches, this.state.optionMatches[this.state.indexCurrentMatch].id);\n\n        if (iAmTargetOrSource === 'T') {\n          TargetAndSource.set(\"targetId\", this.state.id);\n          TargetAndSource.set(\"sourceId\", this.state.optionMatches[this.state.indexCurrentMatch].id);\n        } else {\n          TargetAndSource.set(\"targetId\", this.state.optionMatches[this.state.indexCurrentMatch].id);\n          TargetAndSource.set(\"sourceId\", Number(this.state.id));\n        }\n      } else {\n        TargetAndSource.set(\"targetId\", this.state.optionMatches[this.state.indexCurrentMatch].id);\n        TargetAndSource.set(\"sourceId\", this.state.id);\n      }\n\n      const obj = Object.fromEntries(TargetAndSource);\n      UserDataService.createMatch(this.state.id, obj);\n    };\n\n    this.state = {\n      id: AuthenticationService.getLoggedInUserId(),\n      optionMatches: null,\n      indexCurrentMatch: 0,\n      pathes: null,\n      myImages: null,\n      initialIndexPathSearch: 0,\n      relationships: null\n    };\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  render() {\n    let optionMatch;\n    if (this.state.optionMatches != null) optionMatch = this.state.optionMatches[this.state.indexCurrentMatch];else optionMatch = null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ViewerNetworkVisualization, {\n        pathes: this.state.pathes,\n        optionMatch: optionMatch,\n        myImages: this.state.myImages,\n        startIndex: this.state.initialIndexPathSearch,\n        updateInitialIndexPathSearchToZero: this.updateInitialIndexPathSearchToZero\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(ViewerPotenMatch, {\n        likeClicked: this.likeClicked,\n        backClicked: this.backClicked,\n        unlikeClicked: this.unlikeClicked,\n        getMorePathes: this.getMorePathes,\n        optionMatch: optionMatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SearchMatch;","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/pages/search_match/SearchMatch.jsx"],"names":["React","Component","ViewerNetworkVisualization","ViewerPotenMatch","UserDataService","AuthenticationService","SearchMatch","constructor","props","refresh","resOptionMatches","getOptionMatches","state","id","resPathes","getPathes","data","resMyImages","getImages","matches","getMatches","setState","optionMatches","pathes","myImages","relationships","likeClicked","newIndexCurrentMatch","createOrUpdateMatch","indexCurrentMatch","length","backClicked","prevstate","unlikeClicked","getMorePathes","initialIndexPathSearch","updateInitialIndexPathSearchToZero","isNewMatch","optionMatchId","i","source","target","iAmTargetOrSource","TargetAndSource","Map","set","Number","obj","Object","fromEntries","createMatch","getLoggedInUserId","componentDidMount","render","optionMatch"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport ViewerNetworkVisualization from \"./components/Viewer_network_visualization/ViewerNetworkVisualization.js\"\r\nimport ViewerPotenMatch from \"./components/viewer_potenMatch/ViewerPotenMatch.js\"\r\nimport {UserDataService} from '@api/index.js'\r\nimport AuthenticationService from '@services/AuthenticationService.js'\r\n\r\nclass SearchMatch extends Component {\r\n \r\n    constructor(props){\r\n         super(props)\r\n           this.state = {\r\n                   id: AuthenticationService.getLoggedInUserId(),\r\n                   optionMatches: null,\r\n                   indexCurrentMatch: 0,\r\n                   pathes: null,\r\n                   myImages: null,\r\n                   initialIndexPathSearch: 0,\r\n                   relationships: null \r\n            }\r\n    }\r\n\r\n    componentDidMount(){\r\n         this.refresh()\r\n    }\r\n\r\n    refresh = async () =>{\r\n    \r\n        const resOptionMatches = await UserDataService.getOptionMatches(this.state.id); \r\n        const resPathes = await UserDataService.getPathes(this.state.id, resOptionMatches.data[0].id ); \r\n        const resMyImages = await UserDataService.getImages(this.state.id);\r\n        const matches = await UserDataService.getMatches(this.state.id);\r\n\r\n        this.setState(\r\n            { \r\n                optionMatches: resOptionMatches.data,\r\n                pathes: resPathes.data,\r\n                myImages: resMyImages.data, \r\n                relationships: matches.data\r\n            }\r\n        )\r\n    }\r\n\r\n    likeClicked = async () =>{\r\n        \r\n        let resPathes = null\r\n        let newIndexCurrentMatch = 0\r\n\r\n        this.createOrUpdateMatch();\r\n\r\n        if(this.state.indexCurrentMatch < this.state.optionMatches.length -1 ){\r\n            resPathes = await UserDataService.getPathes(this.state.id, this.state.optionMatches[this.state.indexCurrentMatch+1].id )\r\n            newIndexCurrentMatch = this.state.indexCurrentMatch + 1 \r\n        }else{\r\n            resPathes = await UserDataService.getPathes(this.state.id, this.state.optionMatches[0].id )\r\n        }\r\n        \r\n        this.setState(\r\n                { \r\n                  indexCurrentMatch: newIndexCurrentMatch,\r\n                  pathes: resPathes.data \r\n                }\r\n        )\r\n    }\r\n\r\n    backClicked = () =>{\r\n\r\n        if(this.state.indexCurrentMatch == 0 )\r\n            this.setState(prevstate => (\r\n                { indexCurrentMatch: this.state.optionMatches.length -1}\r\n            ))\r\n        else{\r\n            this.setState(prevstate => (\r\n                { indexCurrentMatch: prevstate.indexCurrentMatch - 1}\r\n            \r\n            ))\r\n        }\r\n    }\r\n\r\n    unlikeClicked = async () =>{\r\n\r\n        let resPathes = null\r\n        let newIndexCurrentMatch = 0\r\n\r\n        if(this.state.indexCurrentMatch < this.state.optionMatches.length -1 ){\r\n            resPathes = await UserDataService.getPathes(this.state.id, this.state.optionMatches[this.state.indexCurrentMatch+1].id )\r\n            newIndexCurrentMatch = this.state.indexCurrentMatch + 1 \r\n        }else{\r\n            resPathes = await UserDataService.getPathes(this.state.id, this.state.optionMatches[0].id )\r\n        }\r\n        \r\n        this.setState(\r\n                { \r\n                  indexCurrentMatch: newIndexCurrentMatch,\r\n                  pathes: resPathes.data \r\n                }\r\n        ) \r\n\r\n    }  \r\n     \r\n    getMorePathes = () =>{\r\n\r\n        this.setState(prevstate => (\r\n            { \r\n                initialIndexPathSearch: prevstate.initialIndexPathSearch + 4,\r\n            }\r\n        ))\r\n\r\n    }\r\n\r\n    updateInitialIndexPathSearchToZero = () =>{\r\n                this.setState({initialIndexPathSearch: 0})\r\n    }\r\n\r\n    isNewMatch = (matches, optionMatchId) =>{\r\n\r\n        for( let i=0; i< matches.length; i++ ){\r\n            if( matches[i].source == optionMatchId || matches[i].target == optionMatchId)\r\n                return true\r\n        }\r\n\r\n        return false\r\n\r\n    }\r\n\r\n    iAmTargetOrSource = (matches, optionMatchId) =>{\r\n\r\n        for( let i=0; i< matches.length; i++ ){\r\n\r\n            if( matches[i].source == optionMatchId){\r\n                return 'T';\r\n            }\r\n\r\n            if(matches[i].target == optionMatchId){\r\n                return 'S';\r\n            }\r\n    }\r\n\r\n        return false\r\n    \r\n    }\r\n\r\n    createOrUpdateMatch = () =>{\r\n\r\n        const isNewMatch = this.isNewMatch(this.state.matches, this.state.optionMatches[this.state.indexCurrentMatch].id)\r\n        const TargetAndSource = new Map();\r\n\r\n        if(isNewMatch){\r\n\r\n            const iAmTargetOrSource = iAmTargetOrSource(this.state.matches, this.state.optionMatches[this.state.indexCurrentMatch].id)\r\n\r\n            if( iAmTargetOrSource === 'T' ){\r\n                TargetAndSource.set(\"targetId\", this.state.id)\r\n                TargetAndSource.set(\"sourceId\", this.state.optionMatches[this.state.indexCurrentMatch].id)\r\n            }\r\n            else{\r\n                TargetAndSource.set(\"targetId\", this.state.optionMatches[this.state.indexCurrentMatch].id)\r\n                TargetAndSource.set(\"sourceId\", Number(this.state.id))\r\n            }    \r\n\r\n        }else{\r\n            TargetAndSource.set(\"targetId\", this.state.optionMatches[this.state.indexCurrentMatch].id)\r\n            TargetAndSource.set(\"sourceId\", this.state.id )\r\n        }\r\n\r\n        const obj = Object.fromEntries(TargetAndSource);\r\n        UserDataService.createMatch(this.state.id,obj);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let optionMatch;\r\n\r\n        if( this.state.optionMatches != null )\r\n             optionMatch = this.state.optionMatches[this.state.indexCurrentMatch];\r\n        else\r\n             optionMatch = null;\r\n\r\n        return (\r\n            <div>\r\n               \r\n               <ViewerNetworkVisualization pathes={this.state.pathes} \r\n                                           optionMatch={optionMatch}\r\n                                           myImages={this.state.myImages} \r\n                                           startIndex={this.state.initialIndexPathSearch}\r\n                                           updateInitialIndexPathSearchToZero = {this.updateInitialIndexPathSearchToZero} /> \r\n\r\n               <ViewerPotenMatch likeClicked = {this.likeClicked} \r\n                                 backClicked = {this.backClicked}\r\n                                 unlikeClicked = {this.unlikeClicked}\r\n                                 getMorePathes = {this.getMorePathes}\r\n                                 optionMatch = {optionMatch} /> \r\n        \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchMatch"]},"metadata":{},"sourceType":"module"}