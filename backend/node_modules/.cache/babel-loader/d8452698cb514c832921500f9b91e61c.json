{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yonil\\\\my-app\\\\src\\\\pages\\\\show_friend_requests\\\\ShowFriendRequests.jsx\";\nimport React, { Component } from \"react\";\nimport UserDataService from \"@api/user/UserDataService\";\nimport GridSystem from '@components/GridSystem.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShowFriendRequests extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refresh = async () => {\n      var requestParam = {\n        params: {\n          type: \"F\",\n          status: \"S\"\n        }\n      };\n\n      getNumRow = colCount => {\n        let rowcount;\n\n        if (this.state.filteredlistFriendRequests != null) {\n          rowcount = Math.ceil(this.state.filteredFriendsList.length / colCount);\n        } else {\n          rowcount = 0;\n        }\n\n        return rowcount;\n      };\n\n      const listFriendRequests = await UserDataService.getRelationships(this.state.id, requestParam);\n      this.setState({\n        listFriendRequests: listFriendRequests.data\n      });\n    };\n\n    this.state = {\n      listFriendRequests: null\n    };\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  render() {\n    const colCount = 2;\n    const rowcount = this.getNumRow(colCount);\n    const ListViewFriends = this.buildListViewFriends();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(GridSystem, {\n        rowcount: rowcount,\n        colCount: colCount,\n        view: ListViewFriends\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ShowFriendRequests;","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/pages/show_friend_requests/ShowFriendRequests.jsx"],"names":["React","Component","UserDataService","GridSystem","ShowFriendRequests","constructor","props","refresh","requestParam","params","type","status","getNumRow","colCount","rowcount","state","filteredlistFriendRequests","Math","ceil","filteredFriendsList","length","listFriendRequests","getRelationships","id","setState","data","componentDidMount","render","ListViewFriends","buildListViewFriends"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;;AAEA,MAAMC,kBAAN,SAAiCH,SAAjC,CAA2C;AAEzCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAalBC,OAbkB,GAaR,YAAW;AAEnB,UAAIC,YAAY,GAAG;AACfC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE,GADA;AAENC,UAAAA,MAAM,EAAE;AAFF;AADO,OAAnB;;AAOAC,MAAAA,SAAS,GAAIC,QAAD,IAAa;AAErB,YAAIC,QAAJ;;AAEA,YAAG,KAAKC,KAAL,CAAWC,0BAAX,IAAuC,IAA1C,EAA+C;AAC7CF,UAAAA,QAAQ,GAAGG,IAAI,CAACC,IAAL,CAAU,KAAKH,KAAL,CAAWI,mBAAX,CAA+BC,MAA/B,GAAwCP,QAAlD,CAAX;AACA,SAFF,MAEM;AACHC,UAAAA,QAAQ,GAAG,CAAX;AACD;;AAED,eAAOA,QAAP;AACF,OAXH;;AAaA,YAAMO,kBAAkB,GAAG,MAAMnB,eAAe,CAACoB,gBAAhB,CAAiC,KAAKP,KAAL,CAAWQ,EAA5C,EAA+Cf,YAA/C,CAAjC;AAEA,WAAKgB,QAAL,CAAc;AAACH,QAAAA,kBAAkB,EAAEA,kBAAkB,CAACI;AAAxC,OAAd;AAED,KAvCiB;;AAEZ,SAAKV,KAAL,GAAa;AAETM,MAAAA,kBAAkB,EAAE;AAFX,KAAb;AAKL;;AAEDK,EAAAA,iBAAiB,GAAE;AACjB,SAAKnB,OAAL;AACD;;AA8BDoB,EAAAA,MAAM,GAAG;AAEP,UAAMd,QAAQ,GAAG,CAAjB;AACA,UAAMC,QAAQ,GAAG,KAAKF,SAAL,CAAeC,QAAf,CAAjB;AACA,UAAMe,eAAe,GAAG,KAAKC,oBAAL,EAAxB;AAEA,wBAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BAIU,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAIf,QAAxB;AACY,QAAA,QAAQ,EAAID,QADxB;AAEY,QAAA,IAAI,EAAEe;AAFlB;AAAA;AAAA;AAAA;AAAA;AAJV;AAAA;AAAA;AAAA;AAAA,YAFF;AAcD;;AA/DwC;;AAkE3C,eAAexB,kBAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport UserDataService from \"@api/user/UserDataService\";\r\nimport GridSystem from '@components/GridSystem.js';\r\n\r\nclass ShowFriendRequests extends Component {\r\n  \r\n  constructor(props){\r\n    super(props)\r\n        this.state = {\r\n\r\n            listFriendRequests: null\r\n\r\n        }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.refresh()\r\n  }\r\n\r\n  refresh = async () =>{\r\n\r\n    var requestParam = {\r\n        params: {\r\n          type: \"F\",\r\n          status: \"S\"\r\n        }\r\n    }\r\n\r\n    getNumRow = (colCount) =>{\r\n\r\n        let rowcount\r\n    \r\n        if(this.state.filteredlistFriendRequests!=null){\r\n          rowcount = Math.ceil(this.state.filteredFriendsList.length / colCount) ;\r\n         }else{\r\n           rowcount = 0;\r\n         }\r\n    \r\n         return rowcount\r\n      }\r\n\r\n    const listFriendRequests = await UserDataService.getRelationships(this.state.id,requestParam);\r\n\r\n    this.setState({listFriendRequests: listFriendRequests.data})\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const colCount = 2\r\n    const rowcount = this.getNumRow(colCount)\r\n    const ListViewFriends = this.buildListViewFriends()\r\n\r\n    return (\r\n\r\n      <div className=\"mx-auto\">\r\n\r\n                {/* <SubNavbar handleChange={this.handleChange} valSerach={this.state.valSerach}/> */}\r\n\r\n                <GridSystem rowcount = {rowcount} \r\n                            colCount = {colCount} \r\n                            view={ListViewFriends}\r\n                />\r\n            \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowFriendRequests"]},"metadata":{},"sourceType":"module"}