{"ast":null,"code":"import axios from 'axios';\n\nclass AuthenticationService {\n  registerSuccessfulLogin(phonenumber, password) {\n    sessionStorage.setItem('authenticatedUser', phonenumber);\n    this.setupAxiosInterceptors();\n  }\n\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return false;\n    return true;\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(\"authenticatedUser\");\n    if (user === null) return '';\n    return user;\n  }\n\n  setupAxiosInterceptors() {\n    let usrname = 'in28minutes';\n    let pwd = 'dummy';\n    let basicAuthHeader = 'Basic ' + window.btoa(usrname + \":\" + pwd);\n    axios.interceptors.request.use(config => {\n      console.log('here');\n      config.headers.authorization = basicAuthHeader;\n      console.log('here1');\n      return config;\n    });\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/components/AuthenticationService.js"],"names":["axios","AuthenticationService","registerSuccessfulLogin","phonenumber","password","sessionStorage","setItem","setupAxiosInterceptors","logout","removeItem","isUserLoggedIn","user","getItem","getLoggedInUserName","usrname","pwd","basicAuthHeader","window","btoa","interceptors","request","use","config","console","log","headers","authorization"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAN,CAA2B;AAGvBC,EAAAA,uBAAuB,CAACC,WAAD,EAAaC,QAAb,EAAsB;AACzCC,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA2CH,WAA3C;AACA,SAAKI,sBAAL;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJH,IAAAA,cAAc,CAACI,UAAf,CAA0B,mBAA1B;AACH;;AAEDC,EAAAA,cAAc,GAAE;AACZ,QAAIC,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuB,mBAAvB,CAAX;AAEA,QAAGD,IAAI,KAAK,IAAZ,EAAkB,OAAO,KAAP;AAElB,WAAO,IAAP;AAEH;;AAEDE,EAAAA,mBAAmB,GAAE;AAEjB,QAAIF,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuB,mBAAvB,CAAX;AACA,QAAGD,IAAI,KAAG,IAAV,EACI,OAAO,EAAP;AAEH,WAAOA,IAAP;AAEJ;;AAEDJ,EAAAA,sBAAsB,GAAE;AAEpB,QAAIO,OAAO,GAAG,aAAd;AACA,QAAIC,GAAG,GAAG,OAAV;AACA,QAAIC,eAAe,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYJ,OAAO,GAAE,GAAT,GAAeC,GAA3B,CAAjC;AAEDf,IAAAA,KAAK,CAACmB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACIC,MAAD,IAAU;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACCF,MAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,GAA+BV,eAA/B;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,aAAOF,MAAP;AACD,KANN;AAQF;;AA7CsB;;AAiD3B,eAAe,IAAIrB,qBAAJ,EAAf","sourcesContent":["\r\nimport axios from 'axios'\r\n\r\nclass AuthenticationService{\r\n\r\n\r\n    registerSuccessfulLogin(phonenumber,password){\r\n        sessionStorage.setItem('authenticatedUser',phonenumber);\r\n        this.setupAxiosInterceptors()\r\n    }\r\n\r\n    logout(){\r\n        sessionStorage.removeItem('authenticatedUser');\r\n    }\r\n\r\n    isUserLoggedIn(){\r\n        let user = sessionStorage.getItem('authenticatedUser')\r\n        \r\n        if(user === null) return false\r\n\r\n        return true\r\n\r\n    }\r\n\r\n    getLoggedInUserName(){\r\n\r\n        let user = sessionStorage.getItem(\"authenticatedUser\");\r\n        if(user===null) \r\n            return '';\r\n\r\n         return user;\r\n\r\n    }\r\n\r\n    setupAxiosInterceptors(){\r\n        \r\n        let usrname = 'in28minutes'\r\n        let pwd = 'dummy'\r\n        let basicAuthHeader = 'Basic ' + window.btoa(usrname+ \":\" + pwd);\r\n\r\n       axios.interceptors.request.use(\r\n          (config)=>{\r\n              console.log('here')\r\n               config.headers.authorization = basicAuthHeader\r\n               console.log('here1')\r\n              return config\r\n            } \r\n       )\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}