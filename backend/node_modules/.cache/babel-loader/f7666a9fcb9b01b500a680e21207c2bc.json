{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yonil\\\\my-app\\\\src\\\\pages\\\\search_match\\\\SearchMatch.jsx\";\nimport React, { Component } from 'react';\nimport ViewerNetworkVisualization from \"./components/Viewer_network_visualization/ViewerNetworkVisualization.js\";\nimport ViewerPotenMatch from \"./components/viewer_potenMatch/ViewerPotenMatch.js\";\nimport { UserDataService } from '@api/index.js';\nimport AuthenticationService from '@services/AuthenticationService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchMatch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refresh = async () => {\n      const resOptionMatches = await UserDataService.getOptionMatches(this.state.id);\n      const resPathes = await UserDataService.getPathes(this.state.id, resOptionMatches.data[0].id);\n      const resMyImages = await UserDataService.getImages(this.state.id);\n      const relationships = await UserDataService.getRelationships(this.state.id);\n      this.setState({\n        optionMatches: resOptionMatches.data,\n        pathes: resPathes.data,\n        myImages: resMyImages.data,\n        relationships: relationships.data\n      });\n    };\n\n    this.likeClicked = async () => {\n      let resPathes = null;\n      let newIndexCurrentMatch = 0;\n      this.createOrUpdateMatch();\n\n      if (this.state.indexCurrentMatch < this.state.optionMatches.length - 1) {\n        resPathes = await UserDataService.getPathes(this.state.id, this.state.optionMatches[this.state.indexCurrentMatch + 1].id);\n        newIndexCurrentMatch = this.state.indexCurrentMatch + 1;\n      } else {\n        resPathes = await UserDataService.getPathes(this.state.id, this.state.optionMatches[0].id);\n      }\n\n      this.setState({\n        indexCurrentMatch: newIndexCurrentMatch,\n        pathes: resPathes.data\n      });\n    };\n\n    this.backClicked = () => {\n      if (this.state.indexCurrentMatch == 0) this.setState(prevstate => ({\n        indexCurrentMatch: this.state.optionMatches.length - 1\n      }));else {\n        this.setState(prevstate => ({\n          indexCurrentMatch: prevstate.indexCurrentMatch - 1\n        }));\n      }\n    };\n\n    this.unlikeClicked = async () => {\n      let resPathes = null;\n      let newIndexCurrentMatch = 0;\n\n      if (this.state.indexCurrentMatch < this.state.optionMatches.length - 1) {\n        resPathes = await UserDataService.getPathes(this.state.id, this.state.optionMatches[this.state.indexCurrentMatch + 1].id);\n        newIndexCurrentMatch = this.state.indexCurrentMatch + 1;\n      } else {\n        resPathes = await UserDataService.getPathes(this.state.id, this.state.optionMatches[0].id);\n      }\n\n      this.setState({\n        indexCurrentMatch: newIndexCurrentMatch,\n        pathes: resPathes.data\n      });\n    };\n\n    this.getMorePathes = () => {\n      this.setState(prevstate => ({\n        initialIndexPathSearch: prevstate.initialIndexPathSearch + 4\n      }));\n    };\n\n    this.updateInitialIndexPathSearchToZero = () => {\n      this.setState({\n        initialIndexPathSearch: 0\n      });\n    };\n\n    this.isNewMatch = (relationships, optionMatchId) => {\n      for (let i = 0; i < relationships.length; i++) {\n        if (relationships[i].source.id == optionMatchId || relationships[i].target.id == optionMatchId) {\n          this.setState({\n            indexCurrentRelationShip: i\n          });\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.iAmTargetOrSource = relationships => {\n      if (relationships[this.state.indexCurrentRelationShip].source.id == this.state.id) {\n        return 'S';\n      }\n\n      if (relationships[this.state.indexCurrentRelationShip].target.id == this.state.id) {\n        return 'T';\n      }\n    };\n\n    this.createOrUpdateMatch = async () => {\n      const isNewMatch = this.isNewMatch(this.state.relationships, this.state.optionMatches[this.state.indexCurrentMatch].id);\n      const iAmTargetOrSource = this.iAmTargetOrSource(this.state.relationships);\n      var requestParam = {\n        params: {\n          source: 17,\n          target: 18,\n          type: 'MATCH',\n          status: ''\n        }\n      };\n\n      if (isNewMatch) {\n        requestParam.params.status = 'ACTIVE';\n\n        if (iAmTargetOrSource === 'T') {\n          requestParam.params.source = this.state.optionMatches[this.state.indexCurrentMatch].id;\n          requestParam.params.target = Number(this.state.id);\n        } else {\n          requestParam.params.source = Number(this.state.id);\n          requestParam.params.target = this.state.optionMatches[this.state.indexCurrentMatch].id;\n        }\n\n        await UserDataService.updateRelationship(this.state.id, requestParam);\n      } else {\n        requestParam.params.status = 'STANDBY';\n        requestParam.params.source = Number(this.state.id);\n        requestParam.params.target = this.state.optionMatches[this.state.indexCurrentMatch].id;\n        await UserDataService.createRelationship(this.state.id, requestParam);\n      }\n    };\n\n    this.state = {\n      id: AuthenticationService.getLoggedInUserId(),\n      optionMatches: null,\n      indexCurrentMatch: 0,\n      pathes: null,\n      myImages: null,\n      initialIndexPathSearch: 0,\n      relationships: null\n    };\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  render() {\n    let optionMatch;\n    if (this.state.optionMatches != null) optionMatch = this.state.optionMatches[this.state.indexCurrentMatch];else optionMatch = null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ViewerNetworkVisualization, {\n        pathes: this.state.pathes,\n        optionMatch: optionMatch,\n        myImages: this.state.myImages,\n        startIndex: this.state.initialIndexPathSearch,\n        updateInitialIndexPathSearchToZero: this.updateInitialIndexPathSearchToZero\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(ViewerPotenMatch, {\n        likeClicked: this.likeClicked,\n        backClicked: this.backClicked,\n        unlikeClicked: this.unlikeClicked,\n        getMorePathes: this.getMorePathes,\n        optionMatch: optionMatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SearchMatch;","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/pages/search_match/SearchMatch.jsx"],"names":["React","Component","ViewerNetworkVisualization","ViewerPotenMatch","UserDataService","AuthenticationService","SearchMatch","constructor","props","refresh","resOptionMatches","getOptionMatches","state","id","resPathes","getPathes","data","resMyImages","getImages","relationships","getRelationships","setState","optionMatches","pathes","myImages","likeClicked","newIndexCurrentMatch","createOrUpdateMatch","indexCurrentMatch","length","backClicked","prevstate","unlikeClicked","getMorePathes","initialIndexPathSearch","updateInitialIndexPathSearchToZero","isNewMatch","optionMatchId","i","source","target","indexCurrentRelationShip","iAmTargetOrSource","requestParam","params","type","status","Number","updateRelationship","createRelationship","getLoggedInUserId","componentDidMount","render","optionMatch"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport ViewerNetworkVisualization from \"./components/Viewer_network_visualization/ViewerNetworkVisualization.js\"\r\nimport ViewerPotenMatch from \"./components/viewer_potenMatch/ViewerPotenMatch.js\"\r\nimport {UserDataService} from '@api/index.js'\r\nimport AuthenticationService from '@services/AuthenticationService.js'\r\n\r\nclass SearchMatch extends Component {\r\n \r\n    constructor(props){\r\n         super(props)\r\n           this.state = {\r\n                   id: AuthenticationService.getLoggedInUserId(),\r\n                   optionMatches: null,\r\n                   indexCurrentMatch: 0,\r\n                   pathes: null,\r\n                   myImages: null,\r\n                   initialIndexPathSearch: 0,\r\n                   relationships: null \r\n            }\r\n    }\r\n\r\n    componentDidMount(){\r\n         this.refresh()\r\n    }\r\n\r\n    refresh = async () =>{\r\n    \r\n        const resOptionMatches = await UserDataService.getOptionMatches(this.state.id); \r\n        const resPathes = await UserDataService.getPathes(this.state.id, resOptionMatches.data[0].id ); \r\n        const resMyImages = await UserDataService.getImages(this.state.id);\r\n        const relationships = await UserDataService.getRelationships(this.state.id);\r\n\r\n        this.setState(\r\n            { \r\n                optionMatches: resOptionMatches.data,\r\n                pathes: resPathes.data,\r\n                myImages: resMyImages.data, \r\n                relationships: relationships.data\r\n            }\r\n        )\r\n    }\r\n\r\n    likeClicked = async () =>{\r\n        \r\n        let resPathes = null\r\n        let newIndexCurrentMatch = 0\r\n\r\n        this.createOrUpdateMatch();\r\n\r\n        if(this.state.indexCurrentMatch < this.state.optionMatches.length -1 ){\r\n            resPathes = await UserDataService.getPathes(this.state.id, this.state.optionMatches[this.state.indexCurrentMatch+1].id )\r\n            newIndexCurrentMatch = this.state.indexCurrentMatch + 1 \r\n        }else{\r\n            resPathes = await UserDataService.getPathes(this.state.id, this.state.optionMatches[0].id )\r\n        }\r\n        \r\n        this.setState(\r\n                { \r\n                  indexCurrentMatch: newIndexCurrentMatch,\r\n                  pathes: resPathes.data \r\n                }\r\n        )\r\n    }\r\n\r\n    backClicked = () =>{\r\n\r\n        if(this.state.indexCurrentMatch == 0 )\r\n            this.setState(prevstate => (\r\n                { indexCurrentMatch: this.state.optionMatches.length -1}\r\n            ))\r\n        else{\r\n            this.setState(prevstate => (\r\n                { indexCurrentMatch: prevstate.indexCurrentMatch - 1}\r\n            \r\n            ))\r\n        }\r\n    }\r\n\r\n    unlikeClicked = async () =>{\r\n\r\n        let resPathes = null\r\n        let newIndexCurrentMatch = 0\r\n\r\n        if(this.state.indexCurrentMatch < this.state.optionMatches.length -1 ){\r\n            resPathes = await UserDataService.getPathes(this.state.id, this.state.optionMatches[this.state.indexCurrentMatch+1].id )\r\n            newIndexCurrentMatch = this.state.indexCurrentMatch + 1 \r\n        }else{\r\n            resPathes = await UserDataService.getPathes(this.state.id, this.state.optionMatches[0].id )\r\n        }\r\n        \r\n        this.setState(\r\n                { \r\n                  indexCurrentMatch: newIndexCurrentMatch,\r\n                  pathes: resPathes.data \r\n                }\r\n        ) \r\n\r\n    }  \r\n     \r\n    getMorePathes = () =>{\r\n\r\n        this.setState(prevstate => (\r\n            { \r\n                initialIndexPathSearch: prevstate.initialIndexPathSearch + 4,\r\n            }\r\n        ))\r\n\r\n    }\r\n\r\n    updateInitialIndexPathSearchToZero = () =>{\r\n                this.setState({initialIndexPathSearch: 0})\r\n    }\r\n\r\n    isNewMatch = (relationships, optionMatchId) =>{\r\n\r\n        for( let i=0; i< relationships.length; i++ ){\r\n            if( relationships[i].source.id == optionMatchId || relationships[i].target.id == optionMatchId){\r\n                this.setState( {indexCurrentRelationShip: i} )\r\n                return true\r\n            }\r\n        }\r\n\r\n        return false\r\n\r\n    }\r\n\r\n    iAmTargetOrSource = (relationships) =>{\r\n\r\n        if( relationships[this.state.indexCurrentRelationShip].source.id == this.state.id){\r\n            return 'S';\r\n        }\r\n        if(relationships[this.state.indexCurrentRelationShip].target.id == this.state.id){\r\n            return 'T';\r\n        }\r\n    \r\n    }\r\n\r\n    createOrUpdateMatch = async () =>{\r\n\r\n        const isNewMatch = this.isNewMatch(this.state.relationships, this.state.optionMatches[this.state.indexCurrentMatch].id)\r\n        const iAmTargetOrSource = this.iAmTargetOrSource(this.state.relationships)\r\n\r\n        var requestParam = {\r\n            params: {\r\n                source: 17 ,\r\n                target: 18,\r\n                type: 'MATCH' ,\r\n                status: '' \r\n            }\r\n        }\r\n\r\n        if(isNewMatch){\r\n\r\n            requestParam.params.status = 'ACTIVE'\r\n\r\n            if( iAmTargetOrSource === 'T' ){\r\n\r\n                requestParam.params.source = this.state.optionMatches[this.state.indexCurrentMatch].id\r\n                requestParam.params.target = Number(this.state.id)\r\n\r\n            }\r\n            else{\r\n                requestParam.params.source = Number(this.state.id)\r\n                requestParam.params.target = this.state.optionMatches[this.state.indexCurrentMatch].id\r\n            }  \r\n            \r\n            await UserDataService.updateRelationship(this.state.id,requestParam);\r\n\r\n        }else{\r\n\r\n            requestParam.params.status = 'STANDBY'\r\n            requestParam.params.source = Number(this.state.id)\r\n            requestParam.params.target = this.state.optionMatches[this.state.indexCurrentMatch].id\r\n\r\n            await UserDataService.createRelationship(this.state.id,requestParam);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let optionMatch;\r\n\r\n        if( this.state.optionMatches != null )\r\n             optionMatch = this.state.optionMatches[this.state.indexCurrentMatch];\r\n        else\r\n             optionMatch = null;\r\n\r\n        return (\r\n            <div>\r\n               \r\n               <ViewerNetworkVisualization pathes={this.state.pathes} \r\n                                           optionMatch={optionMatch}\r\n                                           myImages={this.state.myImages} \r\n                                           startIndex={this.state.initialIndexPathSearch}\r\n                                           updateInitialIndexPathSearchToZero = {this.updateInitialIndexPathSearchToZero} /> \r\n\r\n               <ViewerPotenMatch likeClicked = {this.likeClicked} \r\n                                 backClicked = {this.backClicked}\r\n                                 unlikeClicked = {this.unlikeClicked}\r\n                                 getMorePathes = {this.getMorePathes}\r\n                                 optionMatch = {optionMatch} /> \r\n        \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchMatch"]},"metadata":{},"sourceType":"module"}