{"ast":null,"code":"import axios from \"axios\";\n\nconst setupAxiosInterceptors = (usrname, pwd) => {\n  const instance = axios.create({\n    baseURL: 'http://localhost:8080',\n    timeout: 10000,\n    params: {} // do not remove this, its added to add params later in the config\n\n  });\n  instance.interceptors.request.use(function (config) {\n    alert('test');\n    let basicAuthHeader = 'Basic ' + window.btoa(usrname + \":\" + pwd);\n    config.headers.authorization = basicAuthHeader;\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n};\n\nexport default instance;","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/components/instance.js"],"names":["axios","setupAxiosInterceptors","usrname","pwd","instance","create","baseURL","timeout","params","interceptors","request","use","config","alert","basicAuthHeader","window","btoa","headers","authorization","error","Promise","reject"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAOC,sBAAsB,GAAG,CAACC,OAAD,EAAUC,GAAV,KAAiB;AAEjD,QAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAE,uBADiB;AAE1BC,IAAAA,OAAO,EAAE,KAFiB;AAG1BC,IAAAA,MAAM,EAAE,EAHkB,CAGf;;AAHe,GAAb,CAAjB;AAMAJ,EAAAA,QAAQ,CAACK,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUC,MAAV,EAAkB;AAChDC,IAAAA,KAAK,CAAC,MAAD,CAAL;AAEA,QAAIC,eAAe,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYd,OAAO,GAAE,GAAT,GAAeC,GAA3B,CAAjC;AAEAS,IAAAA,MAAM,CAACK,OAAP,CAAeC,aAAf,GAA+BJ,eAA/B;AAEC,WAAOF,MAAP;AAEH,GATF,EASI,UAAUO,KAAV,EAAiB;AAChB;AACA,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,GAZF;AAcC,CAtBD;;AA0BA,eAAef,QAAf","sourcesContent":["\r\nimport axios from \"axios\"\r\n\r\nconst  setupAxiosInterceptors = (usrname, pwd) =>{\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:8080',\r\n    timeout: 10000,\r\n    params: {} // do not remove this, its added to add params later in the config\r\n});\r\n\r\ninstance.interceptors.request.use(function (config) {\r\n    alert('test');\r\n\r\n    let basicAuthHeader = 'Basic ' + window.btoa(usrname+ \":\" + pwd);\r\n\r\n    config.headers.authorization = basicAuthHeader\r\n\r\n     return config;\r\n\r\n }, function (error) {\r\n     // Do something with request error\r\n     return Promise.reject(error)\r\n })\r\n\r\n}\r\n\r\n\r\n\r\nexport default instance"]},"metadata":{},"sourceType":"module"}