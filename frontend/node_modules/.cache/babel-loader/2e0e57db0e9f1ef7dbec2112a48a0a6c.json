{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yonil\\\\my-app\\\\src\\\\pages\\\\search_match\\\\SearchMatch.jsx\";\nimport React, { Component } from 'react';\nimport ViewerNetworkVisualization from \"./components/Viewer_network_visualization/ViewerNetworkVisualization.js\";\nimport ViewerPotenMatch from \"./components/viewer_potenMatch/ViewerPotenMatch.js\";\nimport { UserDataService } from '@api/index.js';\nimport AuthenticationService from '@services/AuthenticationService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SearchMatch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refresh = async () => {\n      const resOptionMatches = await UserDataService.getOptionMatches(this.state.id);\n      const resPathes = await UserDataService.getPathes(this.state.id, resOptionMatches.data[0].id);\n      const resMyImages = await UserDataService.getImages(this.state.id);\n      const DataForViewerNetworkVisualization = this.BuildDataForViewerNetworkVisualization(resPathes.data, resOptionMatches.data[0]);\n      this.setState({\n        optionMatches: resOptionMatches.data,\n        pathes: resPathes.data,\n        DataForViewerNetworkVisualization: DataForViewerNetworkVisualization,\n        myImages: resMyImages.data\n      });\n    };\n\n    this.likeClicked = () => {\n      if (this.state.indexCurrentMatch < this.state.optionMatches.length - 1) this.setState(prevstate => ({\n        indexCurrentMatch: prevstate.indexCurrentMatch + 1\n      }));else {\n        this.setState({\n          indexCurrentMatch: 0\n        });\n      }\n    };\n\n    this.backClicked = () => {\n      if (this.state.indexCurrentMatch == 0) this.setState(prevstate => ({\n        indexCurrentMatch: this.state.optionMatches.length - 1\n      }));else {\n        this.setState(prevstate => ({\n          indexCurrentMatch: prevstate.indexCurrentMatch - 1\n        }));\n      }\n    };\n\n    this.unlikeClicked = () => {\n      if (this.state.indexCurrentMatch < this.state.optionMatches.length - 1) this.setState(prevstate => ({\n        indexCurrentMatch: prevstate.indexCurrentMatch + 1\n      }));else {\n        this.setState({\n          indexCurrentMatch: 0\n        });\n      }\n    };\n\n    this.unlikeClicked = () => {\n      if (this.state.indexCurrentMatch < this.state.optionMatches.length - 1) this.setState(prevstate => ({\n        indexCurrentMatch: prevstate.indexCurrentMatch + 1\n      }));else {\n        this.setState({\n          indexCurrentMatch: 0\n        });\n      }\n    };\n\n    this.BuildDataForViewerNetworkVisualization = (pathes, optionMatch, myImages) => {\n      if (pathes != null && optionMatch != null) {\n        const gridSystemPathesIndex = [[\"12\", \"6\", \"2\", \"1\"], [\"13\", \"8\", \"9\", \"3\"], [\"18\", \"23\", \"24\", \"29\"], [\"17\", \"22\", \"21\", \"26\"]];\n        const gridSystemPathesData = Array.apply(null, Array(30)).map(function () {});\n        let z = 0;\n\n        for (let i = 0; i < pathes.length && i <= 3; i++) {\n          for (let j = 0; j < pathes[i].length; j++) {\n            if (j == 0) if (j == pathes[i].length - 1) {\n              gridSystemPathesData[z++] = {\n                next: gridSystemPathesIndex[i][j + 1],\n                index: gridSystemPathesIndex[i][j],\n                content: pathes[i][j].image[0].content\n              };\n              gridSystemPathesData[z++] = {\n                next: null,\n                index: gridSystemPathesIndex[i][j + 1],\n                content: optionMatch.image[0].content\n              };\n            } else {\n              gridSystemPathesData[z++] = {\n                next: gridSystemPathesIndex[i][j + 1],\n                index: gridSystemPathesIndex[i][j],\n                content: pathes[i][j].image[0].content\n              };\n            }\n          }\n        }\n\n        return gridSystemPathesData.sort(this.compare);\n      } else {\n        return null;\n      }\n    };\n\n    this.compare = (a, b) => {\n      if (Number(a.index) < Number(b.index)) {\n        return -1;\n      }\n\n      if (Number(a.index) > Number(b.index)) {\n        return 1;\n      }\n\n      return 0;\n    };\n\n    this.state = {\n      id: AuthenticationService.getLoggedInUserId(),\n      optionMatches: null,\n      indexCurrentMatch: 0,\n      pathes: null,\n      DataForViewerNetworkVisualization: null\n    };\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  render() {\n    let optionMatch;\n    if (this.state.optionMatches != null) optionMatch = this.state.optionMatches[this.state.indexCurrentMatch];else optionMatch = null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ViewerNetworkVisualization, {\n        data: this.state.DataForViewerNetworkVisualization\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(ViewerPotenMatch, {\n        likeClicked: this.likeClicked,\n        backClicked: this.backClicked,\n        unlikeClicked: this.unlikeClicked,\n        optionMatch: optionMatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SearchMatch;","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/pages/search_match/SearchMatch.jsx"],"names":["React","Component","ViewerNetworkVisualization","ViewerPotenMatch","UserDataService","AuthenticationService","SearchMatch","constructor","props","refresh","resOptionMatches","getOptionMatches","state","id","resPathes","getPathes","data","resMyImages","getImages","DataForViewerNetworkVisualization","BuildDataForViewerNetworkVisualization","setState","optionMatches","pathes","myImages","likeClicked","indexCurrentMatch","length","prevstate","backClicked","unlikeClicked","optionMatch","gridSystemPathesIndex","gridSystemPathesData","Array","apply","map","z","i","j","next","index","content","image","sort","compare","a","b","Number","getLoggedInUserId","componentDidMount","render"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport ViewerNetworkVisualization from \"./components/Viewer_network_visualization/ViewerNetworkVisualization.js\"\r\nimport ViewerPotenMatch from \"./components/viewer_potenMatch/ViewerPotenMatch.js\"\r\nimport {UserDataService} from '@api/index.js'\r\nimport AuthenticationService from '@services/AuthenticationService.js'\r\n\r\nclass SearchMatch extends Component {\r\n \r\n    constructor(props){\r\n         super(props)\r\n           this.state = {\r\n                   id: AuthenticationService.getLoggedInUserId(),\r\n                   optionMatches: null,\r\n                   indexCurrentMatch: 0,\r\n                   pathes: null,\r\n                   DataForViewerNetworkVisualization: null\r\n            }\r\n    }\r\n\r\n    componentDidMount(){\r\n         this.refresh()\r\n    }\r\n\r\n    refresh = async () =>{\r\n    \r\n        const resOptionMatches = await UserDataService.getOptionMatches(this.state.id); \r\n        const resPathes = await UserDataService.getPathes(this.state.id, resOptionMatches.data[0].id ); \r\n        const resMyImages = await UserDataService.getImages(this.state.id);\r\n        const DataForViewerNetworkVisualization =  this.BuildDataForViewerNetworkVisualization(resPathes.data,resOptionMatches.data[0]);\r\n\r\n        this.setState(\r\n            { \r\n                optionMatches: resOptionMatches.data,\r\n                pathes: resPathes.data,\r\n                DataForViewerNetworkVisualization: DataForViewerNetworkVisualization,\r\n                myImages: resMyImages.data \r\n            }\r\n        )\r\n    }\r\n\r\n    likeClicked = () =>{\r\n        \r\n        if(this.state.indexCurrentMatch < this.state.optionMatches.length -1 )\r\n            this.setState(prevstate => (\r\n                { indexCurrentMatch: prevstate.indexCurrentMatch + 1}\r\n            ))\r\n        else{\r\n            this.setState(\r\n                { indexCurrentMatch: 0}\r\n            )\r\n        }    \r\n    }\r\n\r\n    backClicked = () =>{\r\n\r\n        if(this.state.indexCurrentMatch == 0 )\r\n            this.setState(prevstate => (\r\n                { indexCurrentMatch: this.state.optionMatches.length -1}\r\n            ))\r\n        else{\r\n            this.setState(prevstate => (\r\n                { indexCurrentMatch: prevstate.indexCurrentMatch - 1}\r\n            \r\n            ))\r\n        }\r\n    }\r\n\r\n    unlikeClicked = () =>{\r\n\r\n        if(this.state.indexCurrentMatch < this.state.optionMatches.length -1 )\r\n            this.setState(prevstate => (\r\n                { indexCurrentMatch: prevstate.indexCurrentMatch + 1}\r\n            ))\r\n        else{\r\n            this.setState(\r\n                { indexCurrentMatch: 0}\r\n            )\r\n        }  \r\n    }  \r\n\r\n    unlikeClicked = () =>{\r\n\r\n        if(this.state.indexCurrentMatch < this.state.optionMatches.length -1 )\r\n            this.setState(prevstate => (\r\n                { indexCurrentMatch: prevstate.indexCurrentMatch + 1}\r\n            ))\r\n        else{\r\n            this.setState(\r\n                { indexCurrentMatch: 0}\r\n            )\r\n        }  \r\n    } \r\n\r\n    BuildDataForViewerNetworkVisualization = (pathes, optionMatch, myImages) =>{\r\n\r\n        if( pathes!= null && optionMatch!=null){\r\n            \r\n            const gridSystemPathesIndex = [ [\"12\",\"6\",\"2\",\"1\"] , [\"13\",\"8\",\"9\",\"3\"] , [\"18\",\"23\",\"24\",\"29\"] , [\"17\",\"22\",\"21\",\"26\"] ]\r\n             \r\n            const gridSystemPathesData = Array.apply(null, Array(30)).map(function () {})\r\n        \r\n            let z = 0\r\n    \r\n            for( let i = 0 ;i < pathes.length && i<=3; i++ ){\r\n                for(let j = 0 ;j < pathes[i].length; j++){\r\n                \r\n                    if(j==0)\r\n                    if( j == (pathes[i].length -1) ){\r\n                        gridSystemPathesData[z++] = {next: gridSystemPathesIndex[i][j+1]  ,  index: gridSystemPathesIndex[i][j],  content: pathes[i][j].image[0].content}\r\n                        gridSystemPathesData[z++] = {next: null  ,  index: gridSystemPathesIndex[i][j+1],  content: optionMatch.image[0].content}\r\n                    }\r\n                    else{\r\n                        gridSystemPathesData[z++] = {next: gridSystemPathesIndex[i][j+1]  ,  index: gridSystemPathesIndex[i][j],  content: pathes[i][j].image[0].content }  \r\n                    }\r\n                }\r\n            }\r\n            \r\n            return gridSystemPathesData.sort(this.compare);\r\n        }\r\n        else{\r\n            return null\r\n        }       \r\n    }\r\n\r\n    compare = ( a, b ) => {\r\n        if ( Number(a.index) < Number(b.index) ){\r\n          return -1;\r\n        }\r\n        if ( Number(a.index) > Number(b.index) ){\r\n          return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    render() {\r\n\r\n        let optionMatch;\r\n\r\n        if( this.state.optionMatches != null )\r\n             optionMatch = this.state.optionMatches[this.state.indexCurrentMatch];\r\n        else\r\n             optionMatch = null;\r\n\r\n        return (\r\n            <div>\r\n               \r\n               <ViewerNetworkVisualization data={this.state.DataForViewerNetworkVisualization} /> \r\n                            \r\n               <ViewerPotenMatch likeClicked = {this.likeClicked} \r\n                                 backClicked = {this.backClicked}\r\n                                 unlikeClicked = {this.unlikeClicked}\r\n                                 optionMatch = {optionMatch} /> \r\n        \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchMatch"]},"metadata":{},"sourceType":"module"}