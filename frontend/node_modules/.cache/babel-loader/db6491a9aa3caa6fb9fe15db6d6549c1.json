{"ast":null,"code":"import axios from 'axios';\n\nclass AuthenticationService {\n  registerSuccessfulLogin(phonenumber, password) {\n    sessionStorage.setItem('authenticatedUser', phonenumber);\n    this.setupAxiosInterceptors();\n  }\n\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return false;\n    return true;\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(\"authenticatedUser\");\n    if (user === null) return '';\n    return user;\n  }\n\n  setupAxiosInterceptors() {\n    const instance = axios.create({\n      baseURL: 'http://localhost:8080',\n      timeout: 10000,\n      params: {} // do not remove this, its added to add params later in the config\n\n    });\n    instance.interceptors.request.use(function (config) {\n      console.log(\"here\");\n    }); //     let usrname = 'in28minutes'\n    //     let pwd = 'dummy'\n    //     let basicAuthHeader = 'Basic ' + window.btoa(usrname+ \":\" + pwd);\n    //    axios.interceptors.request.use(\n    //       (config)=>{\n    //           console.log('here')\n    //            config.headers.authorization = basicAuthHeader\n    //            console.log('here1')\n    //           return config\n    //         } \n    //    )\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/components/AuthenticationService.js"],"names":["axios","AuthenticationService","registerSuccessfulLogin","phonenumber","password","sessionStorage","setItem","setupAxiosInterceptors","logout","removeItem","isUserLoggedIn","user","getItem","getLoggedInUserName","instance","create","baseURL","timeout","params","interceptors","request","use","config","console","log"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAN,CAA2B;AAGvBC,EAAAA,uBAAuB,CAACC,WAAD,EAAaC,QAAb,EAAsB;AACzCC,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA2CH,WAA3C;AACA,SAAKI,sBAAL;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJH,IAAAA,cAAc,CAACI,UAAf,CAA0B,mBAA1B;AACH;;AAEDC,EAAAA,cAAc,GAAE;AACZ,QAAIC,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuB,mBAAvB,CAAX;AAEA,QAAGD,IAAI,KAAK,IAAZ,EAAkB,OAAO,KAAP;AAElB,WAAO,IAAP;AAEH;;AAEDE,EAAAA,mBAAmB,GAAE;AAEjB,QAAIF,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuB,mBAAvB,CAAX;AACA,QAAGD,IAAI,KAAG,IAAV,EACI,OAAO,EAAP;AAEH,WAAOA,IAAP;AAEJ;;AAEDJ,EAAAA,sBAAsB,GAAE;AAEpB,UAAMO,QAAQ,GAAGd,KAAK,CAACe,MAAN,CAAa;AAC1BC,MAAAA,OAAO,EAAE,uBADiB;AAE1BC,MAAAA,OAAO,EAAE,KAFiB;AAG1BC,MAAAA,MAAM,EAAE,EAHkB,CAGf;;AAHe,KAAb,CAAjB;AAMAJ,IAAAA,QAAQ,CAACK,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUC,MAAV,EAAkB;AAEhDC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEF,KAJF,EARoB,CAcxB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC;;AA1DsB;;AA8D3B,eAAe,IAAIvB,qBAAJ,EAAf","sourcesContent":["\r\nimport axios from 'axios'\r\n\r\nclass AuthenticationService{\r\n\r\n\r\n    registerSuccessfulLogin(phonenumber,password){\r\n        sessionStorage.setItem('authenticatedUser',phonenumber);\r\n        this.setupAxiosInterceptors()\r\n    }\r\n\r\n    logout(){\r\n        sessionStorage.removeItem('authenticatedUser');\r\n    }\r\n\r\n    isUserLoggedIn(){\r\n        let user = sessionStorage.getItem('authenticatedUser')\r\n        \r\n        if(user === null) return false\r\n\r\n        return true\r\n\r\n    }\r\n\r\n    getLoggedInUserName(){\r\n\r\n        let user = sessionStorage.getItem(\"authenticatedUser\");\r\n        if(user===null) \r\n            return '';\r\n\r\n         return user;\r\n\r\n    }\r\n\r\n    setupAxiosInterceptors(){\r\n\r\n        const instance = axios.create({\r\n            baseURL: 'http://localhost:8080',\r\n            timeout: 10000,\r\n            params: {} // do not remove this, its added to add params later in the config\r\n        });\r\n\r\n        instance.interceptors.request.use(function (config) {\r\n\r\n            console.log(\"here\");\r\n\r\n         })\r\n\r\n    //     let usrname = 'in28minutes'\r\n    //     let pwd = 'dummy'\r\n    //     let basicAuthHeader = 'Basic ' + window.btoa(usrname+ \":\" + pwd);\r\n\r\n    //    axios.interceptors.request.use(\r\n    //       (config)=>{\r\n    //           console.log('here')\r\n    //            config.headers.authorization = basicAuthHeader\r\n    //            console.log('here1')\r\n    //           return config\r\n    //         } \r\n    //    )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}