{"ast":null,"code":"import axios from \"axios\";\n\nclass AuthenticationService {\n  registerSuccessfulLogin(username) {\n    sessionStorage.setItem('authenticatedUser', username);\n    this.setupAxiosInterceptors();\n  }\n\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return false;\n    return true;\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(\"authenticatedUser\");\n    if (user === null) return '';\n    return user;\n  }\n\n  setupAxiosInterceptors() {\n    let username = 'in28minutes';\n    let password = 'dummy';\n    let basicAuthHeaderString = 'Basic ' + window.btoa(`${username}:${password}`);\n    axios.interceptors.request.use(config => {\n      if (this.isUserLoggedIn()) {\n        console.log(\"test\");\n        config.headers.authorization = basicAuthHeaderString;\n      }\n\n      return config;\n    });\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/components/AuthenticationService.js"],"names":["axios","AuthenticationService","registerSuccessfulLogin","username","sessionStorage","setItem","setupAxiosInterceptors","logout","removeItem","isUserLoggedIn","user","getItem","getLoggedInUserName","password","basicAuthHeaderString","window","btoa","interceptors","request","use","config","console","log","headers","authorization"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAN,CAA2B;AAGvBC,EAAAA,uBAAuB,CAACC,QAAD,EAAU;AAC7BC,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA2CF,QAA3C;AACA,SAAKG,sBAAL;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJH,IAAAA,cAAc,CAACI,UAAf,CAA0B,mBAA1B;AACH;;AAEDC,EAAAA,cAAc,GAAE;AACZ,QAAIC,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuB,mBAAvB,CAAX;AAEA,QAAGD,IAAI,KAAK,IAAZ,EAAkB,OAAO,KAAP;AAElB,WAAO,IAAP;AAEH;;AAEDE,EAAAA,mBAAmB,GAAE;AAEjB,QAAIF,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuB,mBAAvB,CAAX;AACA,QAAGD,IAAI,KAAG,IAAV,EACI,OAAO,EAAP;AAEH,WAAOA,IAAP;AAEJ;;AAEDJ,EAAAA,sBAAsB,GAAE;AAEpB,QAAIH,QAAQ,GAAG,aAAf;AACA,QAAIU,QAAQ,GAAG,OAAf;AAEA,QAAIC,qBAAqB,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAa,GAAEb,QAAS,IAAGU,QAAS,EAApC,CAAvC;AACAb,IAAAA,KAAK,CAACiB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,MAAM,IAAI;AACjC,UAAG,KAAKX,cAAL,EAAH,EAAyB;AACrBY,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAF,QAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,GAA+BV,qBAA/B;AACH;;AACD,aAAOM,MAAP;AACH,KANL;AAOH;;AA5CsB;;AAgD3B,eAAe,IAAInB,qBAAJ,EAAf","sourcesContent":["\r\nimport axios from \"axios\";\r\n\r\nclass AuthenticationService{\r\n\r\n\r\n    registerSuccessfulLogin(username){\r\n        sessionStorage.setItem('authenticatedUser',username);\r\n        this.setupAxiosInterceptors()\r\n    }\r\n\r\n    logout(){\r\n        sessionStorage.removeItem('authenticatedUser');\r\n    }\r\n\r\n    isUserLoggedIn(){\r\n        let user = sessionStorage.getItem('authenticatedUser')\r\n        \r\n        if(user === null) return false\r\n\r\n        return true\r\n\r\n    }\r\n\r\n    getLoggedInUserName(){\r\n\r\n        let user = sessionStorage.getItem(\"authenticatedUser\");\r\n        if(user===null) \r\n            return '';\r\n\r\n         return user;\r\n\r\n    }\r\n\r\n    setupAxiosInterceptors(){\r\n\r\n        let username = 'in28minutes'\r\n        let password = 'dummy'\r\n\r\n        let basicAuthHeaderString = 'Basic ' + window.btoa(`${username}:${password}`);\r\n        axios.interceptors.request.use(config => {\r\n                if(this.isUserLoggedIn()){\r\n                    console.log(\"test\");\r\n                    config.headers.authorization = basicAuthHeaderString\r\n                }\r\n                return config\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}