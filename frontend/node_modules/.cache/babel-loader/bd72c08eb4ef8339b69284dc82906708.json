{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yonil\\\\my-app\\\\src\\\\pages\\\\search_match\\\\components\\\\Viewer_network_visualization\\\\ViewerNetworkVisualization.js\";\nimport React, { Component } from 'react';\nimport GridSystem from './component/GridSystem.js';\nimport DrawArrows from './component/DrawArrows.js';\nimport Xarrow from \"react-xarrows\";\nimport { Image } from \"react-bootstrap\"; // class ViewerNetworkVisualization extends Component {\n//     constructor(props){\n//         super(props)\n//             this.state = {\n//                 conection: \n//                         [  \n//                            {next: null,  index: \"1\",  image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\n//                            {next: \"1\",   index: \"2\",  image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\n//                            {next: null,  index: \"3\",  image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\n//                            {next: \"2\",   index: \"6\",  image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},  \n//                            {next: \"9\",   index: \"8\",  image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\n//                            {next: \"3\",   index: \"9\",  image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},         \n//                            {next: \"6\",   index: \"12\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\n//                            {next: \"8\",   index: \"13\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},             \n//                            {next: \"21\",  index: \"16\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\n//                            {next: \"16\",  index: \"17\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\n//                            {next: \"23\",  index: \"18\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},                   \n//                            {next: \"25\",  index: \"21\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},                   \n//                            {next: \"24\",  index: \"23\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\n//                            {next: \"29\",  index: \"24\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\n//                            {next: null,  index: \"25\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},                         \n//                            {next: null,  index: \"29\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'}\n//                          ],\n//                 arr: [true,true,true,false,false,true,\n//                       false,true,true,false,false,true,     \n//                       true,false,false,true,true,true,\n//                       false,false,true,false,true,true,\n//                       true,false,false,false,true,false,\n//                       ]           \n//             }\n//     }\n//     render() {\n//         return (\n//             <>\n//                 <GridSystem colCount={5} rowcount={6} emptyOrfull={this.state.arr} >          \n//                     {this.state.conection.map(c => <Image src={c.image} roundedCircle className=\"grid-image\" id={c.index} /> )}                                             \n//                 </GridSystem>\n//                  <DrawArrows>\n//                     {this.state.conection}\n//                 </DrawArrows> \n//             </>\n//         )\n//     }\n// }\n// export default ViewerNetworkVisualization\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ViewerNetworkVisualization = props => {\n  const BuildPathesForGridSystem = (pathes, optionMatch) => {\n    const gridSystemPathesIndex = [[\"12\", \"6\", \"2\", \"1\"], [\"13\", \"8\", \"9\", \"3\"], [\"18\", \"23\", \"24\", \"29\"], [\"17\", \"22\", \"21\", \"26\"]];\n    const gridSystemPathesData = Array.apply(null, Array(30)).map(function () {});\n    let z = 0;\n\n    for (let i = 0; i < pathes.length && i <= 3; i++) {\n      for (let j = 0; j < pathes[j].length; j++) {\n        if (j == pathes[j].length - 1) gridSystemPathesData[z++] = {\n          next: null,\n          index: gridSystemPathesIndex[i][j],\n          image: optionMatch.content\n        };else gridSystemPathesData[z++] = {\n          next: gridSystemPathesIndex[i][j + 1],\n          index: gridSystemPathesIndex[i][j],\n          image: pathes[i][j].content\n        };\n      }\n    }\n\n    return gridSystemPathesData;\n  };\n\n  let gridSystemPathesData;\n\n  if (props.pathes != null && props.optionMatch != null) {\n    gridSystemPathesData = this.BuildPathesForGridSystem(props.pathes, props.optionMatch);\n  } else gridSystemPathesData = null;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(GridSystem, {\n        colCount: 5,\n        rowcount: 6,\n        gridSystemPathesData: gridSystemPathesData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 18\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n_c = ViewerNetworkVisualization;\nexport default ViewerNetworkVisualization;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewerNetworkVisualization\");","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/pages/search_match/components/Viewer_network_visualization/ViewerNetworkVisualization.js"],"names":["React","Component","GridSystem","DrawArrows","Xarrow","Image","ViewerNetworkVisualization","props","BuildPathesForGridSystem","pathes","optionMatch","gridSystemPathesIndex","gridSystemPathesData","Array","apply","map","z","i","length","j","next","index","image","content"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport GridSystem from './component/GridSystem.js';\r\nimport DrawArrows from './component/DrawArrows.js';\r\nimport Xarrow from \"react-xarrows\";\r\nimport {Image} from \"react-bootstrap\"\r\n\r\n\r\n// class ViewerNetworkVisualization extends Component {\r\n\r\n\r\n//     constructor(props){\r\n//         super(props)\r\n//             this.state = {\r\n//                 conection: \r\n//                         [  \r\n//                            {next: null,  index: \"1\",  image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\r\n//                            {next: \"1\",   index: \"2\",  image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\r\n//                            {next: null,  index: \"3\",  image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\r\n//                            {next: \"2\",   index: \"6\",  image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},  \r\n//                            {next: \"9\",   index: \"8\",  image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\r\n//                            {next: \"3\",   index: \"9\",  image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},         \r\n//                            {next: \"6\",   index: \"12\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\r\n//                            {next: \"8\",   index: \"13\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},             \r\n//                            {next: \"21\",  index: \"16\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\r\n//                            {next: \"16\",  index: \"17\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\r\n//                            {next: \"23\",  index: \"18\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},                   \r\n//                            {next: \"25\",  index: \"21\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},                   \r\n//                            {next: \"24\",  index: \"23\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\r\n//                            {next: \"29\",  index: \"24\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},\r\n//                            {next: null,  index: \"25\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'},                         \r\n//                            {next: null,  index: \"29\", image: 'https://i.pinimg.com/550x/b0/ac/ce/b0acce2169a511b6775f684cb28a027c.jpg'}\r\n//                          ],\r\n\r\n//                 arr: [true,true,true,false,false,true,\r\n//                       false,true,true,false,false,true,     \r\n//                       true,false,false,true,true,true,\r\n//                       false,false,true,false,true,true,\r\n//                       true,false,false,false,true,false,\r\n//                       ]           \r\n//             }\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n\r\n//             <>\r\n\r\n//                 <GridSystem colCount={5} rowcount={6} emptyOrfull={this.state.arr} >          \r\n//                     {this.state.conection.map(c => <Image src={c.image} roundedCircle className=\"grid-image\" id={c.index} /> )}                                             \r\n//                 </GridSystem>\r\n            \r\n//                  <DrawArrows>\r\n//                     {this.state.conection}\r\n//                 </DrawArrows> \r\n                \r\n//             </>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// export default ViewerNetworkVisualization\r\n\r\nexport const ViewerNetworkVisualization = (props) => {\r\n\r\n    const BuildPathesForGridSystem = (pathes, optionMatch) =>{\r\n\r\n        const gridSystemPathesIndex = [ [\"12\",\"6\",\"2\",\"1\"] , [\"13\",\"8\",\"9\",\"3\"] , [\"18\",\"23\",\"24\",\"29\"] , [\"17\",\"22\",\"21\",\"26\"] ]\r\n         \r\n        const gridSystemPathesData = Array.apply(null, Array(30)).map(function () {})\r\n\r\n        let z = 0\r\n\r\n        for( let i = 0 ;i < pathes.length && i<=3; i++ ){\r\n            for(let j = 0 ;j < pathes[j].length; j++){\r\n\r\n                if( j == pathes[j].length -1)\r\n                    gridSystemPathesData[z++] = {next: null  ,  index: gridSystemPathesIndex[i][j],  image: optionMatch.content}\r\n                else\r\n                    gridSystemPathesData[z++] = {next: gridSystemPathesIndex[i][j+1]  ,  index: gridSystemPathesIndex[i][j],  image: pathes[i][j].content}  \r\n                    \r\n            }\r\n        }\r\n        \r\n        return gridSystemPathesData;\r\n        \r\n    }\r\n\r\n    let gridSystemPathesData\r\n\r\n    if( props.pathes!= null && props.optionMatch!=null){\r\n        gridSystemPathesData =  this.BuildPathesForGridSystem(props.pathes,props.optionMatch)\r\n    }\r\n    else\r\n        gridSystemPathesData =  null\r\n\r\n    return <>\r\n\r\n             <>\r\n\r\n                 {/* emptyOrfull={this.state.arr} */}\r\n\r\n                 <GridSystem colCount={5} rowcount={6} gridSystemPathesData={gridSystemPathesData} >          \r\n                     {/* {this.state.conection.map(c => <Image src={c.image} roundedCircle className=\"grid-image\" id={c.index} /> )}                                              */}\r\n                 </GridSystem>\r\n            \r\n                {/* <DrawArrows>\r\n                     {this.state.conection}\r\n                 </DrawArrows>  */}\r\n                \r\n             </>\r\n\r\n     </>\r\n\r\n}\r\n \r\nexport default ViewerNetworkVisualization"]},"metadata":{},"sourceType":"module"}