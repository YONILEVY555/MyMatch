{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yonil\\\\my-app\\\\src\\\\pages\\\\login\\\\components\\\\login_manager\\\\LoginManager.jsx\";\nimport { Component } from \"react\";\nimport AuthenticationService from \"@services/AuthenticationService.js\";\nimport { LoginWithEmail, LoginWithPhone, Title } from './components/index.js';\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass LoginManager extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      if (this.isValid(event)) {\n        //if(AuthenticationService.executeAuthenticationService(this.state.phonenumber, this.state.password)){\n        AuthenticationService.registerSuccessfulLogin(this.state.phonenumber);\n        this.props.history.push('/search/match/');\n        event.preventDefault(); //}\n      }\n\n      event.preventDefault();\n    };\n\n    this.isValid = event => {\n      const form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        this.setState({\n          validated: true\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.isValid = event => {\n      const form = event.currentTarget;\n\n      if (form.checkValidity() === false) {\n        this.setState({\n          validated: true\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      phone: '',\n      email: '',\n      password: '',\n      validated: false,\n      selectEmail: false,\n      selectPhone: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), (!this.state.selectEmail || this.state.selectPhone) && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        className: \"mb-2 mt-3 d-block mx-auto mt-5\",\n        onClick: null,\n        children: \"To register by email click here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 23\n      }, this), (!this.state.selectEmail || this.state.selectPhone) && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"lg\",\n        className: \"mb-2 mt-3 d-block mx-auto mt-5\",\n        onClick: null,\n        children: \"To register by phone Click here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }, this), this.state.selectEmail && /*#__PURE__*/_jsxDEV(LoginWithEmail, {\n        handleSubmit: this.handleSubmit,\n        handleChange: this.handleChange,\n        validated: this.state.validated,\n        password: this.state.password,\n        loginType: this.state.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 49\n      }, this), this.state.selectPhone && /*#__PURE__*/_jsxDEV(LoginWithPhone, {\n        handleSubmit: this.handleSubmit,\n        handleChange: this.handleChange,\n        validated: this.state.validated,\n        password: this.state.password,\n        loginType: this.state.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default LoginManager;","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/pages/login/components/login_manager/LoginManager.jsx"],"names":["Component","AuthenticationService","LoginWithEmail","LoginWithPhone","Title","Button","LoginManager","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","isValid","registerSuccessfulLogin","state","phonenumber","history","push","preventDefault","form","currentTarget","checkValidity","validated","phone","email","password","selectEmail","selectPhone","render"],"mappings":"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","sourcesContent":["import {Component} from \"react\"\r\nimport AuthenticationService from \"@services/AuthenticationService.js\"\r\nimport {LoginWithEmail,LoginWithPhone,Title} from './components/index.js'\r\nimport {Button} from \"react-bootstrap\"\r\n\r\nclass LoginManager extends Component{\r\n\r\n        constructor(props){\r\n            super(props)\r\n                this.state = {\r\n                    phone: '',\r\n                    email: '',\r\n                    password: '',\r\n                    validated: false,\r\n                    selectEmail: false,\r\n                    selectPhone: false\r\n                }\r\n        }\r\n\r\n        handleChange = (event) => {\r\n            this.setState({\r\n                [event.target.name] : event.target.value\r\n            })\r\n        }\r\n\r\n        handleSubmit = (event) => {\r\n\r\n            if(this.isValid(event)){\r\n                //if(AuthenticationService.executeAuthenticationService(this.state.phonenumber, this.state.password)){\r\n                    AuthenticationService.registerSuccessfulLogin(this.state.phonenumber)\r\n                    this.props.history.push('/search/match/')\r\n                    event.preventDefault();\r\n                //}\r\n            }\r\n            \r\n            event.preventDefault();\r\n\r\n        }\r\n\r\n        isValid = (event) =>{\r\n            const form = event.currentTarget;\r\n            if (form.checkValidity() === false) {\r\n                this.setState({validated: true})\r\n                 return false\r\n            }\r\n            \r\n            return true\r\n        }\r\n\r\n        isValid = (event) =>{\r\n            const form = event.currentTarget;\r\n            if (form.checkValidity() === false) {\r\n                this.setState({validated: true})\r\n                 return false\r\n            }\r\n            \r\n            return true\r\n        }\r\n\r\n      \r\n        render(){\r\n\r\n            return (\r\n\r\n                <>\r\n\r\n                    <Title/>\r\n\r\n                    { \r\n                      (! this.state.selectEmail || this.state.selectPhone) && \r\n                      < Button size=\"lg\" className='mb-2 mt-3 d-block mx-auto mt-5' onClick={null} >\r\n                          To register by email click here\r\n                      </Button>\r\n                    }\r\n\r\n                    { (! this.state.selectEmail || this.state.selectPhone) &&\r\n                      < Button size=\"lg\" className='mb-2 mt-3 d-block mx-auto mt-5' onClick={null} >\r\n                          To register by phone Click here\r\n                        </Button>\r\n                    }\r\n\r\n\r\n                    { this.state.selectEmail && <LoginWithEmail handleSubmit={this.handleSubmit} \r\n                                                                handleChange={this.handleChange}\r\n                                                                validated={this.state.validated}\r\n                                                                password={this.state.password}\r\n                                                                loginType={this.state.email}\r\n                                                />}\r\n\r\n                    { this.state.selectPhone && <LoginWithPhone handleSubmit={this.handleSubmit} \r\n                                                                handleChange={this.handleChange}\r\n                                                                validated={this.state.validated}\r\n                                                                password={this.state.password}\r\n                                                                loginType={this.state.phone}\r\n                    />}\r\n\r\n                </>\r\n\r\n            )\r\n            \r\n        }\r\n\r\n}\r\n\r\nexport default LoginManager;"]},"metadata":{},"sourceType":"module"}