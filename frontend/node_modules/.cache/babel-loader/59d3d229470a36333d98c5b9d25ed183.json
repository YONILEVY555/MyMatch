{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yonil\\\\my-app\\\\src\\\\pages\\\\search_match\\\\components\\\\Viewer_network_visualization\\\\component\\\\DrawArrows.js\";\nimport React from 'react';\nimport Xarrow from \"react-xarrows\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DrawArrows = props => {\n  const renderXarrow = () => {\n    let xarrow = [];\n\n    for (let arrow = 0; arrow < props.DrawArrowsData.length && props.DrawArrowsData; arrow++) {\n      if (children[arrow].next != null) {\n        xarrow.push( /*#__PURE__*/_jsxDEV(Xarrow, {\n          start: children[arrow].index,\n          end: children[arrow].next\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this));\n      }\n    }\n\n    return xarrow;\n  };\n\n  return renderXarrow();\n};\n\n_c = DrawArrows;\nexport default DrawArrows;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawArrows\");","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/pages/search_match/components/Viewer_network_visualization/component/DrawArrows.js"],"names":["React","Xarrow","DrawArrows","props","renderXarrow","xarrow","arrow","DrawArrowsData","length","children","next","push","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE9B,QAAMC,YAAY,GAAG,MAAK;AAEtB,QAAIC,MAAM,GAAG,EAAb;;AAEA,SAAI,IAAIC,KAAK,GAAG,CAAhB,EAAmBA,KAAK,GAAEH,KAAK,CAACI,cAAN,CAAqBC,MAA5B,IAAsCL,KAAK,CAACI,cAA/D,EAA8ED,KAAK,EAAnF,EAAsF;AAElF,UAAGG,QAAQ,CAACH,KAAD,CAAR,CAAgBI,IAAhB,IAAsB,IAAzB,EAA8B;AAC1BL,QAAAA,MAAM,CAACM,IAAP,eACI,QAAC,MAAD;AACI,UAAA,KAAK,EAAEF,QAAQ,CAACH,KAAD,CAAR,CAAgBM,KAD3B;AAEI,UAAA,GAAG,EAAGH,QAAQ,CAACH,KAAD,CAAR,CAAgBI;AAF1B;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMH;AACJ;;AAED,WAAOL,MAAP;AAEH,GAlBD;;AAoBA,SAAOD,YAAY,EAAnB;AAEC,CAxBD;;KAAMF,U;AA0BN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport Xarrow from \"react-xarrows\";\r\n\r\nconst DrawArrows = (props) => {\r\n   \r\nconst renderXarrow = () =>{\r\n\r\n    let xarrow = [];\r\n\r\n    for(let arrow = 0; arrow <props.DrawArrowsData.length && props.DrawArrowsData;arrow++){\r\n\r\n        if(children[arrow].next!=null){\r\n            xarrow.push(\r\n                <Xarrow\r\n                    start={children[arrow].index} \r\n                    end= {children[arrow].next}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    return xarrow;\r\n\r\n}\r\n\r\nreturn renderXarrow();\r\n\r\n};\r\n\r\nexport default DrawArrows;\r\n"]},"metadata":{},"sourceType":"module"}