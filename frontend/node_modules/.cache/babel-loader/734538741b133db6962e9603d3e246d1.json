{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yonil\\\\my-app\\\\src\\\\pages\\\\find_friends\\\\FindFriends.jsx\";\nimport React, { Component } from 'react';\nimport { Image, Button } from \"react-bootstrap\";\nimport SubNavbar from \"@components/SubNavbar.js\";\nimport UserDataService from \"@api/user/UserDataService\";\nimport AuthenticationService from \"@services/AuthenticationService.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FindFriends extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = async event => {\n      var requestParam = {\n        params: {\n          type: 'F'\n        }\n      };\n      let searchResult;\n\n      try {\n        if (event.target.value === '') {\n          this.userNotFound(event);\n          return;\n        }\n\n        searchResult = await UserDataService.retrieveUser(event.target.value);\n        const relationShip = await UserDataService.getRelationship(this.state.id, searchResult.data.id, requestParam);\n        const stateRelationship = this.getStateRelationShip(relationShip.data);\n        this.existRelationshipWithUser(stateRelationship, event, searchResult);\n      } catch (e) {\n        if (e.response.status === 404) {\n          const searchResult = await UserDataService.retrieveUser(event.target.value);\n          this.noRelationshipWithUser(event, searchResult);\n        }\n\n        if (e.response.status === 400 || e.response.status === 500) {\n          this.userNotFound(event);\n        }\n      }\n    };\n\n    this.userNotFound = event => {\n      this.setState({\n        search: event.target.value,\n        showResult: false\n      });\n    };\n\n    this.noRelationshipWithUser = (event, searchResult) => {\n      const state = this.getCustomState(event, searchResult, true, false, false, false, true);\n      this.setState(state);\n    };\n\n    this.existRelationshipWithUser = (stateRelationship, event, searchResult) => {\n      let state;\n\n      if (stateRelationship === \"ALREADY FRIENDS\") {\n        state = this.getCustomState(event, searchResult, true, true, false, false, false);\n      }\n\n      if (stateRelationship === \"ALREADY SENT A REQUEST\") {\n        state = this.getCustomState(event, searchResult, true, false, true, false, false);\n      }\n\n      if (stateRelationship === \"ALREADY RECEIVED A REQUEST\") {\n        state = this.getCustomState(event, searchResult, true, false, false, true, false);\n      }\n\n      this.setState(state);\n    };\n\n    this.getCustomState = (event, searchResult, showResult, isAlreadyFriend, isRequestSent, isRequestReceived, isNotExist) => {\n      const state = {\n        search: null,\n        searchResult: null,\n        showResult: null,\n        imageResult: null,\n        idResult: null,\n        usernameResult: null,\n        isAlreadyFriend: null,\n        isRequestSent: null,\n        isRequestReceived: null,\n        isNotExist: null\n      };\n      this.setCustomState(state, event, searchResult, showResult, isAlreadyFriend, isRequestSent, isRequestReceived, isNotExist);\n      return state;\n    };\n\n    this.setCustomState = (state, event, searchResult, showResult, isAlreadyFriend, isRequestSent, isRequestReceived, isNotExist) => {\n      state.search = event.target.value;\n      state.searchResult = searchResult.data;\n      state.showResult = showResult;\n      state.imageResult = searchResult.data.image[0].content;\n      state.idResult = searchResult.data.id;\n      state.usernameResult = searchResult.data.username;\n      state.isAlreadyFriend = isAlreadyFriend;\n      state.isRequestSent = isRequestSent;\n      state.isRequestReceived = isRequestReceived;\n      state.isNotExist = isNotExist;\n    };\n\n    this.AddFriend = async friendId => {\n      var requestParam = {\n        params: {\n          userId: Number(this.state.id),\n          otherId: friendId,\n          type: 'FRIEND',\n          status: ''\n        }\n      };\n      const state = {\n        isRequestSent: false,\n        isRequestReceived: false,\n        isNotExist: false,\n        isAlreadyFriend: false\n      };\n\n      if (this.state.isRequestReceived) {\n        requestParam.params.status = 'ACTIVE';\n        state.isAlreadyFriend = true;\n        await UserDataService.updateRelationship(this.state.id, requestParam);\n      } else {\n        if (this.state.isNotExist) requestParam.params.status = 'STANDBY';\n        state.isRequestSent = true;\n        await UserDataService.createRelationship(this.state.id, requestParam);\n        this.setState({});\n      }\n    };\n\n    this.cancelRequest = () => {};\n\n    this.getStateRelationShip = relationShip => {\n      if (relationShip != '') {\n        if (relationShip.status === \"STANDBY\") {\n          if (relationShip.source.id == this.state.id) {\n            return \"ALREADY SENT A REQUEST\";\n          } else {\n            return \"ALREADY RECEIVED A REQUEST\";\n          }\n        } else {\n          return \"ALREADY FRIENDS\";\n        }\n      } else {\n        return \"ALREADY FRIENDS\";\n      }\n    };\n\n    this.state = {\n      id: AuthenticationService.getLoggedInUserId(),\n      search: '',\n      searchResult: null,\n      showResult: false,\n      imageResult: '',\n      idResult: '',\n      usernameResult: '',\n      isNotExist: false,\n      isRequestSent: false,\n      isRequestReceived: false,\n      isAlreadyFriend: false\n    };\n  }\n\n  render() {\n    const title = \"Find new friends\";\n    const btnText = \"My friends\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(SubNavbar, {\n        handleChange: this.handleChange,\n        valSerach: this.state.valSerach,\n        btnText: btnText,\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }, this), this.state.showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-50 mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: `data:image/jpeg;base64,${this.state.imageResult}`,\n          className: \" size-image-find-Friends mt-3 mb-3 d-block mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" w-25 mx-auto\",\n          children: this.state.usernameResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" w-25  mx-auto\",\n          children: [(this.state.isNotExist || this.state.isRequestReceived) && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => this.AddFriend(e.target.id),\n            id: this.state.idResult,\n            className: \" w-100 c1 mt-4  mx-auto\",\n            children: \"Add Friend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 120\n          }, this), this.state.isRequestSent && /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"text-muted mx-auto mt-4\",\n            children: \"Request sent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 85\n          }, this), this.state.isRequestSent && /*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => this.cancelRequest(e.target.id),\n            id: this.state.idResult,\n            className: \"btn btn-secondary w-100 c1 mx-auto\",\n            children: \"Cancel request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 86\n          }, this), this.state.isAlreadyFriend && /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"text-muted mx-auto mt-4\",\n            children: \"You are already friends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 87\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FindFriends;","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/pages/find_friends/FindFriends.jsx"],"names":["React","Component","Image","Button","SubNavbar","UserDataService","AuthenticationService","FindFriends","constructor","props","handleChange","event","requestParam","params","type","searchResult","target","value","userNotFound","retrieveUser","relationShip","getRelationship","state","id","data","stateRelationship","getStateRelationShip","existRelationshipWithUser","e","response","status","noRelationshipWithUser","setState","search","showResult","getCustomState","isAlreadyFriend","isRequestSent","isRequestReceived","isNotExist","imageResult","idResult","usernameResult","setCustomState","image","content","username","AddFriend","friendId","userId","Number","otherId","updateRelationship","createRelationship","cancelRequest","source","getLoggedInUserId","render","title","btnText","valSerach"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {Image, Button} from \"react-bootstrap\"\r\nimport SubNavbar from \"@components/SubNavbar.js\";\r\nimport UserDataService from \"@api/user/UserDataService\";\r\nimport AuthenticationService from \"@services/AuthenticationService.js\"\r\n\r\nclass FindFriends extends Component {\r\n\r\n  constructor(props){\r\n\r\n    super(props)\r\n        this.state = {\r\n           id: AuthenticationService.getLoggedInUserId(),\r\n           search: '',\r\n           searchResult: null,\r\n           showResult: false,\r\n           imageResult: '',\r\n           idResult: '',\r\n           usernameResult: '',\r\n           isNotExist: false, \r\n           isRequestSent: false,\r\n           isRequestReceived: false,\r\n           isAlreadyFriend: false\r\n        }\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n\r\n    var requestParam = {\r\n      params: {\r\n          type: 'F' \r\n      }\r\n    }\r\n\r\n    let searchResult\r\n    \r\n    try{\r\n\r\n        if(event.target.value === ''){\r\n              this.userNotFound(event)\r\n              return\r\n        }\r\n  \r\n        searchResult = await UserDataService.retrieveUser(event.target.value)\r\n         \r\n        const relationShip = await UserDataService.getRelationship(this.state.id ,searchResult.data.id,requestParam)\r\n         \r\n        const stateRelationship = this.getStateRelationShip(relationShip.data)\r\n\r\n        this.existRelationshipWithUser(stateRelationship, event, searchResult)\r\n\r\n  }\r\n  catch(e){\r\n              \r\n        if(e.response.status === 404){\r\n\r\n          const searchResult = await UserDataService.retrieveUser(event.target.value)\r\n\r\n          this.noRelationshipWithUser(event, searchResult)\r\n\r\n        }\r\n\r\n         if(e.response.status === 400 || e.response.status === 500){\r\n             this.userNotFound(event)\r\n         }\r\n\r\n  }\r\n\r\n  }\r\n\r\n\r\n  userNotFound = (event) =>{\r\n    this.setState({\r\n      search : event.target.value,\r\n      showResult: false,\r\n    })\r\n  }\r\n\r\n  noRelationshipWithUser = (event, searchResult) =>{\r\n\r\n    const state = this.getCustomState(event, searchResult, true, false, false, false, true)\r\n\r\n    this.setState(state)\r\n\r\n  }\r\n\r\n  existRelationshipWithUser = (stateRelationship, event, searchResult) =>{\r\n    \r\n      let state \r\n\r\n      if( stateRelationship === \"ALREADY FRIENDS\" ){\r\n         state = this.getCustomState(event, searchResult, true, true, false, false, false)\r\n      }\r\n    \r\n       if( stateRelationship === \"ALREADY SENT A REQUEST\" ){\r\n         state = this.getCustomState(event, searchResult, true, false, true, false, false)\r\n      }\r\n    \r\n       if( stateRelationship === \"ALREADY RECEIVED A REQUEST\" ){\r\n         state = this.getCustomState(event, searchResult, true, false, false, true, false)\r\n      }\r\n    \r\n       this.setState(state)\r\n\r\n  }\r\n\r\n  getCustomState = ( event, searchResult, showResult, isAlreadyFriend, isRequestSent, isRequestReceived, isNotExist) =>{\r\n\r\n    const state = { \r\n      search : null,\r\n      searchResult : null,\r\n      showResult:  null,\r\n      imageResult:  null,\r\n      idResult:  null,\r\n      usernameResult:  null,\r\n      isAlreadyFriend:  null,\r\n      isRequestSent:  null,\r\n      isRequestReceived:  null,\r\n      isNotExist:  null\r\n    } \r\n\r\n    this.setCustomState(state, event, searchResult, showResult, isAlreadyFriend, isRequestSent, isRequestReceived, isNotExist)\r\n\r\n    return state\r\n\r\n  }\r\n\r\n  setCustomState = (state,event,searchResult,showResult,isAlreadyFriend,isRequestSent,isRequestReceived,isNotExist) =>{\r\n\r\n      state.search = event.target.value\r\n      state.searchResult = searchResult.data\r\n      state.showResult = showResult\r\n      state.imageResult = searchResult.data.image[0].content\r\n      state.idResult = searchResult.data.id\r\n      state.usernameResult = searchResult.data.username\r\n      state.isAlreadyFriend = isAlreadyFriend\r\n      state.isRequestSent = isRequestSent\r\n      state.isRequestReceived = isRequestReceived\r\n      state.isNotExist = isNotExist\r\n\r\n  }\r\n\r\n  AddFriend = async (friendId) =>{\r\n\r\n    var requestParam = {\r\n      params: {\r\n          userId: Number(this.state.id) ,\r\n          otherId: friendId,\r\n          type: 'FRIEND',\r\n          status: '' \r\n      }\r\n    }\r\n\r\n    \r\n    const state = {  isRequestSent: false,\r\n                     isRequestReceived: false ,\r\n                     isNotExist: false,\r\n                     isAlreadyFriend: false\r\n                  }\r\n                 \r\n    if(this.state.isRequestReceived){\r\n      requestParam.params.status = 'ACTIVE'\r\n      state.isAlreadyFriend = true\r\n      await UserDataService.updateRelationship(this.state.id,requestParam);\r\n    }else{\r\n      if(this.state.isNotExist)  \r\n         requestParam.params.status = 'STANDBY'\r\n         state.isRequestSent = true\r\n         await UserDataService.createRelationship(this.state.id,requestParam);\r\n         this.setState({})\r\n    }\r\n\r\n  }\r\n \r\n\r\n  cancelRequest = () =>{\r\n                            \r\n  }\r\n\r\n  getStateRelationShip = (relationShip) =>{\r\n\r\n    if(relationShip != ''){\r\n         if( relationShip.status === \"STANDBY\" ){\r\n             if( relationShip.source.id == this.state.id){\r\n                return \"ALREADY SENT A REQUEST\"\r\n             }\r\n              else{\r\n                return \"ALREADY RECEIVED A REQUEST\"\r\n              }     \r\n         }else{\r\n              return \"ALREADY FRIENDS\"\r\n         }\r\n      }else{\r\n            return \"ALREADY FRIENDS\"\r\n      }\r\n  }\r\n\r\n    render() {\r\n\r\n        const title = \"Find new friends\"\r\n        const btnText = \"My friends\"\r\n\r\n        return (\r\n\r\n            <div className=\"mx-auto\">\r\n\r\n                        <SubNavbar handleChange={this.handleChange} \r\n                                   valSerach={this.state.valSerach}\r\n                                   btnText={btnText}\r\n                                   title={title}/>\r\n\r\n                        {this.state.showResult && <div className='w-50 mx-auto'>\r\n\r\n                                                 <Image src={`data:image/jpeg;base64,${this.state.imageResult}`} \r\n                                                        className=\" size-image-find-Friends mt-3 mb-3 d-block mx-auto\" />  \r\n   \r\n                                                 <div className=' w-25 mx-auto'>{this.state.usernameResult}</div>\r\n   \r\n                                                 <div className=' w-25  mx-auto'>\r\n                                                      \r\n                                                       { ( this.state.isNotExist || this.state.isRequestReceived )  && <Button onClick={e => this.AddFriend(e.target.id)}  \r\n                                                                                                                               id={this.state.idResult} \r\n                                                                                                                               className=' w-100 c1 mt-4  mx-auto'>Add Friend</Button>}\r\n\r\n                                                       {this.state.isRequestSent && <p class=\"text-muted mx-auto mt-4\">Request sent</p>}\r\n\r\n                                                       { this.state.isRequestSent && <Button onClick={e => this.cancelRequest(e.target.id)}  \r\n                                                                                             id={this.state.idResult} \r\n                                                                                             className='btn btn-secondary w-100 c1 mx-auto'>Cancel request</Button>}\r\n\r\n                                                       {this.state.isAlreadyFriend && <p class=\"text-muted mx-auto mt-4\">You are already friends</p>}\r\n\r\n\r\n   \r\n                                                 </div>\r\n\r\n                                            </div> }\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default FindFriends"]},"metadata":{},"sourceType":"module"}