{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yonil\\\\my-app\\\\src\\\\pages\\\\test\\\\FileUpload.jsx\";\nimport React, { Component } from 'react';\nimport UserDataService from '@api/user/UserDataService.js';\nimport DateHelpers from '@utils/helpers/DateHelpers.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass FileUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refresh = async () => {\n      const res = await UserDataService.getImages(1);\n      this.setState({\n        image: res.data[0].content,\n        flag: true\n      });\n    };\n\n    this.state = {\n      file: null,\n      image: null,\n      flag: false,\n      date: DateHelpers.getTodayEighteenYearsAgo()\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.fileUpload = this.fileUpload.bind(this);\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault(); // Stop form submit\n\n    this.fileUpload(this.state.file);\n    let x = 0;\n  }\n\n  onChange(e) {\n    console.log(e.target.files[0]);\n    this.setState({\n      file: e.target.files[0]\n    });\n  }\n\n  async fileUpload(file) {\n    const formData = new FormData();\n    formData.append('image', file);\n    await UserDataService.uploadImage(1, formData);\n  }\n\n  render() {\n    let data = this.state.image;\n\n    const Example = ({\n      data\n    }) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `data:image/jpeg;base64,${data}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 35\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.state.flag && /*#__PURE__*/_jsxDEV(Example, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"File Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          as: \"input\",\n          type: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default FileUpload;\n/*\r\n\r\nimport React, { Component } from 'react'\r\nimport UserDataService from '@api/user/UserDataService.js'\r\nimport AuthenticationService from '@services/AuthenticationService.js'\r\n\r\n\r\nclass FileUpload extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state ={\r\n      id: AuthenticationService.getLoggedInUserId(),\r\n      file:  null,\r\n      image: null,\r\n      flag:  false,\r\n    }\r\n    \r\n  }\r\n  \r\n  componentDidMount(){\r\n    this.refresh()\r\n  }\r\n\r\n  refresh = async ()=>{\r\n \r\n     const res = await UserDataService.getImages(this.state.id);\r\n\r\n     this.setState({\r\n               image: res.data[0].content,\r\n               flag: true\r\n      })\r\n  \r\n  }\r\n\r\n  render() {\r\n\r\n    let image = this.state.image\r\n\r\n    const ViewImage = ({ image }) => <img src={`data:image/jpeg;base64,${image}`} />\r\n\r\n    return (\r\n\r\n      <>\r\n\r\n             {this.state.flag && <ViewImage image = {image} />}\r\n             <input type=\"file\" name=\"image_1\" onChange={this.props.handleChange}/>\r\n             <input type=\"file\" name=\"image_2\" onChange={this.props.handleChange}/>\r\n\r\n      </>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default FileUpload\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/pages/test/FileUpload.jsx"],"names":["React","Component","UserDataService","DateHelpers","FileUpload","constructor","props","refresh","res","getImages","setState","image","data","content","flag","state","file","date","getTodayEighteenYearsAgo","onFormSubmit","bind","onChange","fileUpload","componentDidMount","e","preventDefault","x","console","log","target","files","formData","FormData","append","uploadImage","render","Example"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport UserDataService from '@api/user/UserDataService.js'\r\nimport DateHelpers from '@utils/helpers/DateHelpers.js'\r\n\r\nclass FileUpload extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      file:  null,\r\n      image: null,\r\n      flag:  false,\r\n      date:  DateHelpers.getTodayEighteenYearsAgo(),\r\n    }\r\n    \r\n    this.onFormSubmit = this.onFormSubmit.bind(this)\r\n    this.onChange = this.onChange.bind(this)\r\n    this.fileUpload = this.fileUpload.bind(this)\r\n\r\n  }\r\n  \r\n  componentDidMount(){\r\n    this.refresh()\r\n  }\r\n\r\n  refresh = async ()=>{\r\n \r\n     const res = await UserDataService.getImages(1);\r\n     \r\n     this.setState({\r\n               image: res.data[0].content,\r\n               flag: true\r\n      })\r\n  \r\n  }\r\n\r\n  onFormSubmit(e){\r\n    e.preventDefault() // Stop form submit\r\n    this.fileUpload(this.state.file); \r\n    let x=0;\r\n  }\r\n\r\n  onChange(e) {\r\n    console.log(e.target.files[0])\r\n    this.setState({file:e.target.files[0]})\r\n  }\r\n  \r\n  async fileUpload(file){\r\n    const formData = new FormData();\r\n    formData.append('image',file)\r\n    await UserDataService.uploadImage(1,formData)\r\n  }\r\n  \r\n  render() {\r\n\r\n    let data = this.state.image\r\n\r\n    const Example = ({ data }) => <img src={`data:image/jpeg;base64,${data}`} />\r\n\r\n\r\n    return (\r\n\r\n      <>\r\n             {this.state.flag && <Example data={data} />}\r\n              <form onSubmit={this.onFormSubmit}>\r\n                <h1>File Upload</h1>\r\n                <input type=\"file\" onChange={this.onChange}/>\r\n                <button as=\"input\" type=\"submit\">Upload</button>\r\n              </form>\r\n        \r\n      </>\r\n   )\r\n  }\r\n}\r\n\r\nexport default FileUpload\r\n\r\n/*\r\n\r\nimport React, { Component } from 'react'\r\nimport UserDataService from '@api/user/UserDataService.js'\r\nimport AuthenticationService from '@services/AuthenticationService.js'\r\n\r\n\r\nclass FileUpload extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state ={\r\n      id: AuthenticationService.getLoggedInUserId(),\r\n      file:  null,\r\n      image: null,\r\n      flag:  false,\r\n    }\r\n    \r\n  }\r\n  \r\n  componentDidMount(){\r\n    this.refresh()\r\n  }\r\n\r\n  refresh = async ()=>{\r\n \r\n     const res = await UserDataService.getImages(this.state.id);\r\n\r\n     this.setState({\r\n               image: res.data[0].content,\r\n               flag: true\r\n      })\r\n  \r\n  }\r\n\r\n  render() {\r\n\r\n    let image = this.state.image\r\n\r\n    const ViewImage = ({ image }) => <img src={`data:image/jpeg;base64,${image}`} />\r\n\r\n    return (\r\n\r\n      <>\r\n\r\n             {this.state.flag && <ViewImage image = {image} />}\r\n             <input type=\"file\" name=\"image_1\" onChange={this.props.handleChange}/>\r\n             <input type=\"file\" name=\"image_2\" onChange={this.props.handleChange}/>\r\n\r\n      </>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default FileUpload\r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}