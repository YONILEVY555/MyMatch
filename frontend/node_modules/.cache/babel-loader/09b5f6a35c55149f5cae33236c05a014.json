{"ast":null,"code":"import instance from \"./instance.js\";\n\nclass AuthenticationService {\n  registerSuccessfulLogin(phonenumber, password) {\n    sessionStorage.setItem('authenticatedUser', phonenumber); // this.setupAxiosInterceptors();\n  }\n\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return false;\n    return true;\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(\"authenticatedUser\");\n    if (user === null) return '';\n    return user;\n  } // setupAxiosInterceptors(){\n  //     let usrname = 'in28minutes'\n  //     let pwd = 'dummy'\n  //     let basicAuthHeader = 'Basic ' + window.btoa(usrname+ \":\" + pwd);\n  //     instance.interceptors.request.use(\n  //       (config)=>{\n  //           console.log('here')\n  //            config.headers.authorization = basicAuthHeader\n  //            console.log('here1')\n  //           return config\n  //         } \n  //    )\n  // }\n\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/components/AuthenticationService.js"],"names":["instance","AuthenticationService","registerSuccessfulLogin","phonenumber","password","sessionStorage","setItem","logout","removeItem","isUserLoggedIn","user","getItem","getLoggedInUserName"],"mappings":"AACA,OAAOA,QAAP,MAAqB,eAArB;;AAGA,MAAMC,qBAAN,CAA2B;AAEvBC,EAAAA,uBAAuB,CAACC,WAAD,EAAaC,QAAb,EAAsB;AAEzCC,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA2CH,WAA3C,EAFyC,CAGzC;AAEH;;AAEDI,EAAAA,MAAM,GAAE;AACJF,IAAAA,cAAc,CAACG,UAAf,CAA0B,mBAA1B;AACH;;AAEDC,EAAAA,cAAc,GAAE;AACZ,QAAIC,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX;AAEA,QAAGD,IAAI,KAAK,IAAZ,EAAkB,OAAO,KAAP;AAElB,WAAO,IAAP;AAEH;;AAEDE,EAAAA,mBAAmB,GAAE;AAEjB,QAAIF,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX;AACA,QAAGD,IAAI,KAAG,IAAV,EACI,OAAO,EAAP;AAEH,WAAOA,IAAP;AAEJ,GA9BsB,CAgCvB;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AA/CuB;;AAmD3B,eAAe,IAAIT,qBAAJ,EAAf","sourcesContent":["\r\nimport instance from \"./instance.js\"\r\n\r\n\r\nclass AuthenticationService{\r\n\r\n    registerSuccessfulLogin(phonenumber,password){\r\n\r\n        sessionStorage.setItem('authenticatedUser',phonenumber);\r\n        // this.setupAxiosInterceptors();\r\n\r\n    }\r\n\r\n    logout(){\r\n        sessionStorage.removeItem('authenticatedUser');\r\n    }\r\n\r\n    isUserLoggedIn(){\r\n        let user = sessionStorage.getItem('authenticatedUser')\r\n        \r\n        if(user === null) return false\r\n\r\n        return true\r\n\r\n    }\r\n\r\n    getLoggedInUserName(){\r\n\r\n        let user = sessionStorage.getItem(\"authenticatedUser\");\r\n        if(user===null) \r\n            return '';\r\n\r\n         return user;\r\n\r\n    }\r\n\r\n    // setupAxiosInterceptors(){\r\n\r\n    //     let usrname = 'in28minutes'\r\n    //     let pwd = 'dummy'\r\n    //     let basicAuthHeader = 'Basic ' + window.btoa(usrname+ \":\" + pwd);\r\n\r\n    //     instance.interceptors.request.use(\r\n    //       (config)=>{\r\n    //           console.log('here')\r\n    //            config.headers.authorization = basicAuthHeader\r\n    //            console.log('here1')\r\n    //           return config\r\n    //         } \r\n    //    )\r\n\r\n    // }\r\n\r\n}\r\n\r\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}