{"ast":null,"code":"import axios from \"axios\";\nimport { API_URL } from \"@utils/url/Constants\";\nexport const USER_NAME_ATTRIBUTE_NAME = \"authenticatedUser\";\n\nclass AuthenticationService {\n  async executeJwtAuthenticationService(username, password) {\n    return axios.post(`${API_URL}/authenticate`, {\n      username,\n      password\n    });\n  }\n\n  createJwtToken(token) {\n    return 'Bearer ' + token;\n  }\n\n  registerSuccessfulLoginForJwt(phonenumber) {\n    sessionStorage.setItem(USER_NAME_ATTRIBUTE_NAME, phonenumber);\n    this.setInstance;\n  }\n\n  logout() {\n    sessionStorage.removeItem(USER_NAME_ATTRIBUTE_NAME);\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(USER_NAME_ATTRIBUTE_NAME);\n    if (user === null) return false;\n    return true;\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(USER_NAME_ATTRIBUTE_NAME);\n    if (user === null) return '';\n    return user;\n  }\n\n  setInstance(token) {\n    axios.interceptors.request.use(function (config) {\n      let basicAuthHeader = 'Bearer ' + token;\n      config.headers.authorization = basicAuthHeader;\n      Promise.resolve(config);\n      return config;\n    }, function (error) {\n      return Promise.reject(error);\n    });\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/services/AuthenticationService.js"],"names":["axios","API_URL","USER_NAME_ATTRIBUTE_NAME","AuthenticationService","executeJwtAuthenticationService","username","password","post","createJwtToken","token","registerSuccessfulLoginForJwt","phonenumber","sessionStorage","setItem","setInstance","logout","removeItem","isUserLoggedIn","user","getItem","getLoggedInUserName","interceptors","request","use","config","basicAuthHeader","headers","authorization","Promise","resolve","error","reject"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,sBAAtB;AAGA,OAAO,MAAMC,wBAAwB,GAAG,mBAAjC;;AAEP,MAAMC,qBAAN,CAA2B;AAEc,QAA/BC,+BAA+B,CAACC,QAAD,EAAWC,QAAX,EAAqB;AACtD,WAAON,KAAK,CAACO,IAAN,CAAY,GAAEN,OAAQ,eAAtB,EAAsC;AACzCI,MAAAA,QADyC;AAEzCC,MAAAA;AAFyC,KAAtC,CAAP;AAIH;;AAEDE,EAAAA,cAAc,CAACC,KAAD,EAAQ;AAClB,WAAO,YAAYA,KAAnB;AACH;;AAEDC,EAAAA,6BAA6B,CAACC,WAAD,EAAa;AACtCC,IAAAA,cAAc,CAACC,OAAf,CAAuBX,wBAAvB,EAAgDS,WAAhD;AACA,SAAKG,WAAL;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJH,IAAAA,cAAc,CAACI,UAAf,CAA0Bd,wBAA1B;AACH;;AAEDe,EAAAA,cAAc,GAAE;AACZ,QAAIC,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuBjB,wBAAvB,CAAX;AAEA,QAAGgB,IAAI,KAAK,IAAZ,EAAkB,OAAO,KAAP;AAElB,WAAO,IAAP;AAEH;;AAEDE,EAAAA,mBAAmB,GAAE;AAEjB,QAAIF,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuBjB,wBAAvB,CAAX;AACA,QAAGgB,IAAI,KAAG,IAAV,EACI,OAAO,EAAP;AAEH,WAAOA,IAAP;AAEJ;;AAEDJ,EAAAA,WAAW,CAACL,KAAD,EAAO;AAEdT,IAAAA,KAAK,CAACqB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAAUC,MAAV,EAAkB;AAE7C,UAAIC,eAAe,GAAG,YAAYhB,KAAlC;AAEAe,MAAAA,MAAM,CAACE,OAAP,CAAeC,aAAf,GAA+BF,eAA/B;AAEAG,MAAAA,OAAO,CAACC,OAAR,CAAgBL,MAAhB;AACC,aAAOA,MAAP;AAEH,KATF,EASI,UAAUM,KAAV,EAAiB;AAEhB,aAAOF,OAAO,CAACG,MAAR,CAAeD,KAAf,CAAP;AACH,KAZF;AAaH;;AAxDsB;;AA4D3B,eAAe,IAAI3B,qBAAJ,EAAf","sourcesContent":["\r\nimport axios from \"axios\"\r\nimport {API_URL} from \"@utils/url/Constants\"\r\n\r\n\r\nexport const USER_NAME_ATTRIBUTE_NAME = \"authenticatedUser\"\r\n\r\nclass AuthenticationService{\r\n\r\n    async executeJwtAuthenticationService(username, password) {\r\n        return axios.post(`${API_URL}/authenticate`, {\r\n            username,\r\n            password\r\n        })\r\n    }\r\n\r\n    createJwtToken(token) {\r\n        return 'Bearer ' + token\r\n    }\r\n\r\n    registerSuccessfulLoginForJwt(phonenumber){\r\n        sessionStorage.setItem(USER_NAME_ATTRIBUTE_NAME,phonenumber);\r\n        this.setInstance\r\n    }\r\n\r\n    logout(){\r\n        sessionStorage.removeItem(USER_NAME_ATTRIBUTE_NAME);\r\n    }\r\n\r\n    isUserLoggedIn(){\r\n        let user = sessionStorage.getItem(USER_NAME_ATTRIBUTE_NAME)\r\n        \r\n        if(user === null) return false\r\n\r\n        return true\r\n\r\n    }\r\n\r\n    getLoggedInUserName(){\r\n\r\n        let user = sessionStorage.getItem(USER_NAME_ATTRIBUTE_NAME);\r\n        if(user===null) \r\n            return '';\r\n\r\n         return user;\r\n\r\n    }\r\n\r\n    setInstance(token){\r\n\r\n        axios.interceptors.request.use(function (config) {\r\n\r\n            let basicAuthHeader = 'Bearer ' + token\r\n       \r\n            config.headers.authorization = basicAuthHeader\r\n       \r\n            Promise.resolve(config)\r\n             return config;\r\n       \r\n         }, function (error) {\r\n\r\n             return Promise.reject(error)\r\n         })\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}