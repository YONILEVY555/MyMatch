{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yonil\\\\my-app\\\\src\\\\components\\\\DrawArrows.js\";\nimport React from 'react';\nimport Xarrow from \"react-xarrows\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DrawArrows = ({\n  children\n}) => {\n  let index = 0;\n\n  const renderXarrow = () => {\n    let xarrow = [];\n\n    for (let arrow = 0; arrow < children.length; arrow++) {\n      if (node.flag && node.next != null) xarrow.push( /*#__PURE__*/_jsxDEV(Xarrow, {\n        start: children[index].id,\n        end: children[index].next\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this));\n    }\n\n    {\n      console.log(xarrow);\n    }\n    return xarrow;\n  };\n\n  return renderXarrow();\n};\n\n_c = DrawArrows;\nexport default DrawArrows;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawArrows\");","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/components/DrawArrows.js"],"names":["React","Xarrow","DrawArrows","children","index","renderXarrow","xarrow","arrow","length","node","flag","next","push","id","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAEnC,MAAIC,KAAK,GAAG,CAAZ;;AAEA,QAAMC,YAAY,GAAG,MAAK;AAEtB,QAAIC,MAAM,GAAG,EAAb;;AAEA,SAAI,IAAIC,KAAK,GAAG,CAAhB,EAAmBA,KAAK,GAAEJ,QAAQ,CAACK,MAAnC,EAA0CD,KAAK,EAA/C,EAAkD;AAE9C,UAAGE,IAAI,CAACC,IAAL,IAAaD,IAAI,CAACE,IAAL,IAAW,IAA3B,EAEIL,MAAM,CAACM,IAAP,eAEI,QAAC,MAAD;AACI,QAAA,KAAK,EAAET,QAAQ,CAACC,KAAD,CAAR,CAAgBS,EAD3B;AAEI,QAAA,GAAG,EAAGV,QAAQ,CAACC,KAAD,CAAR,CAAgBO;AAF1B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAQP;;AAED;AAACG,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AAAoB;AACrB,WAAOA,MAAP;AAEH,GArBD;;AAuBA,SAAOD,YAAY,EAAnB;AAEC,CA7BD;;KAAMH,U;AA+BN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport Xarrow from \"react-xarrows\";\r\n\r\nconst DrawArrows = ({children}) => {\r\n\r\nlet index = 0;    \r\n\r\nconst renderXarrow = () =>{\r\n\r\n    let xarrow = [];\r\n\r\n    for(let arrow = 0; arrow <children.length;arrow++){\r\n\r\n        if(node.flag && node.next!=null)\r\n\r\n            xarrow.push(\r\n\r\n                <Xarrow\r\n                    start={children[index].id} \r\n                    end= {children[index].next}\r\n                />\r\n            )\r\n\r\n    }\r\n    \r\n    {console.log(xarrow)}\r\n    return xarrow;\r\n\r\n}\r\n\r\nreturn renderXarrow();\r\n\r\n};\r\n\r\nexport default DrawArrows;\r\n"]},"metadata":{},"sourceType":"module"}