{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yonil\\\\my-app\\\\src\\\\pages\\\\test\\\\FileUpload.jsx\";\nimport React, { Component } from 'react';\nimport UserDataService from '@api/user/UserDataService.js';\nimport DateHelpers from '@utils/helpers/DateHelpers.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass FileUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refresh = async () => {\n      const res = await UserDataService.getImages(1);\n      this.setState({\n        image: res.data[0].content,\n        flag: true\n      });\n    };\n\n    this.onFormSubmit = e => {\n      e.preventDefault();\n      this.fileUpload(this.state.file);\n      let x = 0;\n    };\n\n    this.onChange = e => {\n      console.log(e.target.files[0]);\n      this.setState({\n        file: e.target.files[0]\n      });\n    };\n\n    this.fileUpload = async file => {\n      const formData = new FormData();\n      formData.append('image', file);\n      await UserDataService.uploadImage(1, formData);\n    };\n\n    this.state = {\n      file: null,\n      image: null,\n      flag: false\n    };\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  render() {\n    let image = this.state.image;\n\n    const ViewImage = ({\n      image\n    }) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `data:image/jpeg;base64,${image}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 38\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.state.flag && /*#__PURE__*/_jsxDEV(ViewImage, {\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: this.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/pages/test/FileUpload.jsx"],"names":["React","Component","UserDataService","DateHelpers","FileUpload","constructor","props","refresh","res","getImages","setState","image","data","content","flag","onFormSubmit","e","preventDefault","fileUpload","state","file","x","onChange","console","log","target","files","formData","FormData","append","uploadImage","componentDidMount","render","ViewImage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAEjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEjB,UAAMA,KAAN;;AAFiB,SAgBnBC,OAhBmB,GAgBT,YAAU;AAEjB,YAAMC,GAAG,GAAG,MAAMN,eAAe,CAACO,SAAhB,CAA0B,CAA1B,CAAlB;AAEA,WAAKC,QAAL,CAAc;AACJC,QAAAA,KAAK,EAAEH,GAAG,CAACI,IAAJ,CAAS,CAAT,EAAYC,OADf;AAEJC,QAAAA,IAAI,EAAE;AAFF,OAAd;AAKF,KAzBkB;;AAAA,SA2BnBC,YA3BmB,GA2BHC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,UAAL,CAAgB,KAAKC,KAAL,CAAWC,IAA3B;AACA,UAAIC,CAAC,GAAC,CAAN;AACD,KA/BkB;;AAAA,SAiCnBC,QAjCmB,GAiCPN,CAAD,IAAO;AAChBO,MAAAA,OAAO,CAACC,GAAR,CAAYR,CAAC,CAACS,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ;AACA,WAAKhB,QAAL,CAAc;AAACU,QAAAA,IAAI,EAACJ,CAAC,CAACS,MAAF,CAASC,KAAT,CAAe,CAAf;AAAN,OAAd;AACD,KApCkB;;AAAA,SAsCnBR,UAtCmB,GAsCL,MAAME,IAAN,IAAe;AAC3B,YAAMO,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAwBT,IAAxB;AACA,YAAMlB,eAAe,CAAC4B,WAAhB,CAA4B,CAA5B,EAA8BH,QAA9B,CAAN;AACD,KA1CkB;;AAIjB,SAAKR,KAAL,GAAY;AACVC,MAAAA,IAAI,EAAG,IADG;AAEVT,MAAAA,KAAK,EAAE,IAFG;AAGVG,MAAAA,IAAI,EAAG;AAHG,KAAZ;AAMD;;AAEDiB,EAAAA,iBAAiB,GAAE;AACjB,SAAKxB,OAAL;AACD;;AA8BDyB,EAAAA,MAAM,GAAG;AAEP,QAAIrB,KAAK,GAAG,KAAKQ,KAAL,CAAWR,KAAvB;;AAEA,UAAMsB,SAAS,GAAG,CAAC;AAAEtB,MAAAA;AAAF,KAAD,kBAAe;AAAK,MAAA,GAAG,EAAG,0BAAyBA,KAAM;AAA1C;AAAA;AAAA;AAAA;AAAA,YAAjC;;AAEA,wBAEE;AAAA,iBACQ,KAAKQ,KAAL,CAAWL,IAAX,iBAAmB,QAAC,SAAD;AAAW,QAAA,KAAK,EAAIH;AAApB;AAAA;AAAA;AAAA;AAAA,cAD3B,eAGU;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKW;AAAlC;AAAA;AAAA;AAAA;AAAA,cAHV;AAAA,oBAFF;AAUD;;AA9DgC;;AAiEnC,eAAelB,UAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport UserDataService from '@api/user/UserDataService.js'\r\nimport DateHelpers from '@utils/helpers/DateHelpers.js'\r\n\r\nclass FileUpload extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state ={\r\n      file:  null,\r\n      image: null,\r\n      flag:  false,\r\n    }\r\n    \r\n  }\r\n  \r\n  componentDidMount(){\r\n    this.refresh()\r\n  }\r\n\r\n  refresh = async ()=>{\r\n \r\n     const res = await UserDataService.getImages(1);\r\n\r\n     this.setState({\r\n               image: res.data[0].content,\r\n               flag: true\r\n      })\r\n  \r\n  }\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault() \r\n    this.fileUpload(this.state.file); \r\n    let x=0;\r\n  }\r\n\r\n  onChange = (e) => {\r\n    console.log(e.target.files[0])\r\n    this.setState({file:e.target.files[0]})\r\n  }\r\n  \r\n  fileUpload =  async(file) => {\r\n    const formData = new FormData();\r\n    formData.append('image',file)\r\n    await UserDataService.uploadImage(1,formData)\r\n  }\r\n  \r\n  render() {\r\n\r\n    let image = this.state.image\r\n\r\n    const ViewImage = ({ image }) => <img src={`data:image/jpeg;base64,${image}`} />\r\n\r\n    return (\r\n\r\n      <>\r\n             {this.state.flag && <ViewImage image = {image} />}\r\n             \r\n                <input type=\"file\" onChange={this.onChange}/>\r\n               \r\n      </>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default FileUpload\r\n"]},"metadata":{},"sourceType":"module"}