{"ast":null,"code":"import axios from \"axios\";\n\nclass AuthenticationService {\n  // executeBasicAuthenticationService(phonenumber, password) {\n  //     return axios.get(\"http://localhost:8080/basicauth\",\n  //         { headers: { authorization: this.createBasicAuthToken(phonenumber, password) } })\n  // }\n  executeJwtAuthenticationService(phonenumber, password) {\n    return axios.post(\"http://localhost:8080/authenticate\", {\n      phonenumber,\n      password\n    });\n  }\n\n  createBasicAuthToken(phonenumber, password) {\n    return 'Basic ' + window.btoa(phonenumber + \":\" + password);\n  }\n\n  createJwtToken(token) {\n    return 'Bearer ' + token;\n  }\n\n  registerSuccessfulLoginForJwt(phonenumber) {\n    sessionStorage.setItem('authenticatedUser', phonenumber);\n  }\n\n  registerSuccessfulLogin(phonenumber) {\n    sessionStorage.setItem('authenticatedUser', phonenumber);\n  }\n\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return false;\n    return true;\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(\"authenticatedUser\");\n    if (user === null) return '';\n    return user;\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/components/AuthenticationService.js"],"names":["axios","AuthenticationService","executeJwtAuthenticationService","phonenumber","password","post","createBasicAuthToken","window","btoa","createJwtToken","token","registerSuccessfulLoginForJwt","sessionStorage","setItem","registerSuccessfulLogin","logout","removeItem","isUserLoggedIn","user","getItem","getLoggedInUserName"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAN,CAA2B;AAEvB;AACA;AACA;AACA;AAEAC,EAAAA,+BAA+B,CAACC,WAAD,EAAcC,QAAd,EAAwB;AACnD,WAAOJ,KAAK,CAACK,IAAN,CAAW,oCAAX,EAAiD;AACpDF,MAAAA,WADoD;AAEpDC,MAAAA;AAFoD,KAAjD,CAAP;AAIH;;AAEDE,EAAAA,oBAAoB,CAACH,WAAD,EAAcC,QAAd,EAAwB;AACxC,WAAO,WAAWG,MAAM,CAACC,IAAP,CAAYL,WAAW,GAAG,GAAd,GAAoBC,QAAhC,CAAlB;AACH;;AAEDK,EAAAA,cAAc,CAACC,KAAD,EAAQ;AAClB,WAAO,YAAYA,KAAnB;AACH;;AAEDC,EAAAA,6BAA6B,CAACR,WAAD,EAAa;AACtCS,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA2CV,WAA3C;AACH;;AAEDW,EAAAA,uBAAuB,CAACX,WAAD,EAAa;AAEhCS,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA2CV,WAA3C;AAEH;;AAEDY,EAAAA,MAAM,GAAE;AACJH,IAAAA,cAAc,CAACI,UAAf,CAA0B,mBAA1B;AACH;;AAEDC,EAAAA,cAAc,GAAE;AACZ,QAAIC,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuB,mBAAvB,CAAX;AAEA,QAAGD,IAAI,KAAK,IAAZ,EAAkB,OAAO,KAAP;AAElB,WAAO,IAAP;AAEH;;AAEDE,EAAAA,mBAAmB,GAAE;AAEjB,QAAIF,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuB,mBAAvB,CAAX;AACA,QAAGD,IAAI,KAAG,IAAV,EACI,OAAO,EAAP;AAEH,WAAOA,IAAP;AAEJ;;AArDsB;;AAyD3B,eAAe,IAAIjB,qBAAJ,EAAf","sourcesContent":["\r\nimport axios from \"axios\"\r\n\r\nclass AuthenticationService{\r\n\r\n    // executeBasicAuthenticationService(phonenumber, password) {\r\n    //     return axios.get(\"http://localhost:8080/basicauth\",\r\n    //         { headers: { authorization: this.createBasicAuthToken(phonenumber, password) } })\r\n    // }\r\n\r\n    executeJwtAuthenticationService(phonenumber, password) {\r\n        return axios.post(\"http://localhost:8080/authenticate\", {\r\n            phonenumber,\r\n            password\r\n        })\r\n    }\r\n\r\n    createBasicAuthToken(phonenumber, password) {\r\n        return 'Basic ' + window.btoa(phonenumber + \":\" + password)\r\n    }\r\n\r\n    createJwtToken(token) {\r\n        return 'Bearer ' + token\r\n    }\r\n\r\n    registerSuccessfulLoginForJwt(phonenumber){\r\n        sessionStorage.setItem('authenticatedUser',phonenumber);\r\n    }\r\n\r\n    registerSuccessfulLogin(phonenumber){\r\n\r\n        sessionStorage.setItem('authenticatedUser',phonenumber);\r\n\r\n    }\r\n\r\n    logout(){\r\n        sessionStorage.removeItem('authenticatedUser');\r\n    }\r\n\r\n    isUserLoggedIn(){\r\n        let user = sessionStorage.getItem('authenticatedUser')\r\n        \r\n        if(user === null) return false\r\n\r\n        return true\r\n\r\n    }\r\n\r\n    getLoggedInUserName(){\r\n\r\n        let user = sessionStorage.getItem(\"authenticatedUser\");\r\n        if(user===null) \r\n            return '';\r\n\r\n         return user;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}