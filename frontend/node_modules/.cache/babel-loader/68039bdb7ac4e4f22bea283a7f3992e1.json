{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yonil\\\\my-app\\\\src\\\\pages\\\\test\\\\ReactFileUpload.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from '@services/AuthenticationService.js';\nimport UserDataService from '@api/user/UserDataService.js';\nimport DateHelpers from '@utils/helpers/DateHelpers.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ReactFileUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refresh = async () => {\n      const res = await UserDataService.getImage(1); //  this.setState({\n      //            image: res.data[0].content,\n      //            flag: true\n      //   })\n    };\n\n    this.createImage = () => {\n      var img = new Image(); // Create new img element\n\n      img.src = \"C:\\Users\\yonil\\Desktop}\";\n      var f = new File([img], \"flower.jpg\", {\n        type: \"image/jpeg\",\n        lastModified: this.state.date\n      });\n      console.log(f);\n    };\n\n    this.state = {\n      file: null,\n      image: null,\n      flag: false,\n      date: DateHelpers.getTodayEighteenYearsAgo()\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.fileUpload = this.fileUpload.bind(this);\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault(); // Stop form submit\n\n    this.fileUpload(this.state.file);\n    let x = 0;\n  }\n\n  onChange(e) {\n    console.log(e.target.files[0]);\n    this.createImage();\n    this.setState({\n      file: e.target.files[0]\n    });\n  }\n\n  async fileUpload(file) {\n    const formData = new FormData();\n    formData.append('image', file);\n    await UserDataService.uploadImage(1, formData);\n  }\n\n  render() {\n    let data = this.state.image;\n\n    const Example = ({\n      data\n    }) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `data:image/jpeg;base64,${data}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 35\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.state.flag && /*#__PURE__*/_jsxDEV(Example, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"File Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          as: \"input\",\n          type: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ReactFileUpload; // const config = {\n//     headers: {\n//         'content-type': 'multipart/form-data',          \n//     }          \n// }","map":{"version":3,"sources":["C:/Users/yonil/my-app/src/pages/test/ReactFileUpload.jsx"],"names":["React","Component","AuthenticationService","UserDataService","DateHelpers","ReactFileUpload","constructor","props","refresh","res","getImage","createImage","img","Image","src","f","File","type","lastModified","state","date","console","log","file","image","flag","getTodayEighteenYearsAgo","onFormSubmit","bind","onChange","fileUpload","componentDidMount","e","preventDefault","x","target","files","setState","formData","FormData","append","uploadImage","render","data","Example"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport AuthenticationService from '@services/AuthenticationService.js'\r\nimport UserDataService from '@api/user/UserDataService.js'\r\nimport DateHelpers from '@utils/helpers/DateHelpers.js'\r\n\r\nclass ReactFileUpload extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      file:null,\r\n      image: null,\r\n      flag: false,\r\n      date:   DateHelpers.getTodayEighteenYearsAgo(),\r\n    }\r\n\r\n    this.onFormSubmit = this.onFormSubmit.bind(this)\r\n    this.onChange = this.onChange.bind(this)\r\n    this.fileUpload = this.fileUpload.bind(this)\r\n\r\n  }\r\n\r\n  \r\n  componentDidMount(){\r\n    this.refresh()\r\n  }\r\n\r\n  refresh = async ()=>{\r\n \r\n     const res = await UserDataService.getImage(1);\r\n\r\n    //  this.setState({\r\n    //            image: res.data[0].content,\r\n    //            flag: true\r\n    //   })\r\n  \r\n  }\r\n\r\n  onFormSubmit(e){\r\n    e.preventDefault() // Stop form submit\r\n    this.fileUpload(this.state.file); \r\n    let x=0;\r\n  }\r\n\r\n  onChange(e) {\r\n    console.log(e.target.files[0])\r\n    this.createImage()\r\n    this.setState({file:e.target.files[0]})\r\n  }\r\n\r\n  async fileUpload(file){\r\n    const formData = new FormData();\r\n    formData.append('image',file)\r\n    await UserDataService.uploadImage(1,formData)\r\n  }\r\n\r\n  createImage = ()=>{\r\n\r\n    var img = new Image();   // Create new img element\r\n    img.src = \"C:\\Users\\yonil\\Desktop}\"\r\n\r\n    var f = new File([img], \"flower.jpg\", {type: \"image/jpeg\", lastModified: this.state.date })\r\n\r\n    console.log(f)\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    let data = this.state.image\r\n\r\n    const Example = ({ data }) => <img src={`data:image/jpeg;base64,${data}`} />\r\n\r\n\r\n    return (\r\n\r\n      <>\r\n             {this.state.flag && <Example data={data} />}\r\n              <form onSubmit={this.onFormSubmit}>\r\n                <h1>File Upload</h1>\r\n                <input type=\"file\" onChange={this.onChange}/>\r\n                <button as=\"input\" type=\"submit\">Upload</button>\r\n              </form>\r\n        \r\n      </>\r\n   )\r\n  }\r\n}\r\n\r\nexport default ReactFileUpload\r\n\r\n\r\n    // const config = {\r\n    //     headers: {\r\n    //         'content-type': 'multipart/form-data',          \r\n    //     }          \r\n    // }\r\n"]},"metadata":{},"sourceType":"module"}